{"file":"revogr-filter-panel.entry.cjs.js","mappings":"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","names":["h","debounce","isFilterBtn","index","AndOrButton","TrashButton","Host"],"sources":["src/components/button/button.tsx","src/utils/closestPolifill.ts","src/plugins/filter/filter.style.scss?tag=revogr-filter-panel","src/plugins/filter/filter.pop.tsx"],"sourcesContent":["import { h } from '@stencil/core';\nimport { JSXBase, VNode } from '@stencil/core/internal';\n\ninterface Props extends Partial<JSXBase.ButtonHTMLAttributes<HTMLButtonElement>> {}\n\nexport const RevoButton = (props: Props, children: VNode[]) => {\n  return (\n    <button\n      {...props}\n      class={{\n        ...(typeof props.class === 'object' ? props.class : props.class ? { [props.class]: true } : ''),\n        ['revo-button']: true,\n      }}\n    >\n      {children}\n    </button>\n  );\n};\n","(function closest() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches =\n      ((Element.prototype as unknown) as { msMatchesSelector: (selectors: string) => boolean }).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s: string) {\n      let el: HTMLElement | Element | (Node & ParentNode) = this;\n\n      do {\n        if (Element.prototype.matches.call(el, s)) {\n          return el;\n        }\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    };\n  }\n})();\n","revogr-filter-panel {\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  z-index: 100;\n\n  opacity: 1;\n  transform: none;\n  background-color: #fff;\n  transform-origin: 62px 0px;\n  box-shadow: 0 5px 18px -2px rgba(black, 20%);\n  padding: 10px;\n  border-radius: 4px;\n\n  min-width: 220px;\n  text-align: left;\n\n  .filter-holder > div {\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    color: gray;\n    font-size: 13px;\n    font-weight: 600;\n    display: block;\n    padding: 8px 0;\n  }\n\n  select {\n    width: 100%;\n  }\n\n  input[type=\"text\"] {\n    border: 0;\n    min-height: 34px;\n    margin: 5px 0;\n    background: #f3f3f3;\n    border-radius: 5px;\n    padding: 0 10px;\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  button {\n    margin-top: 10px;\n    margin-right: 5px;\n  }\n\n\n  .filter-actions {\n    text-align: right;\n    margin-right: -5px;\n  }\n}\n\n.rgHeaderCell {\n  &:hover .rv-filter {\n    transition: opacity 267ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 178ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  }\n  &:hover .rv-filter,\n  .rv-filter.active {\n    opacity: 1;\n  }\n\n  .rv-filter {\n    $btn-size: 24px;\n    height: $btn-size;\n    width: $btn-size;\n    background: none;\n    border: 0;\n    opacity: 0;\n    visibility: visible;\n    cursor: pointer;\n    border-radius: 4px;\n\n    &.active {\n      color: #10224a;\n    }\n\n    .filter-img {\n      $img-size: 11px;\n      color: gray;\n      width: $img-size;\n    }\n  }\n}\n\n.select-css {\n  $gradient: \"data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E\";\n  $linearGradient: linear-gradient(to bottom, #ffffff 0%, #ffffff 100%);\n  $borderColor: #f1f1f1;\n\n  display: block;\n  font-family: sans-serif;\n  font-weight: 600;\n  color: #444;\n  line-height: 1.3;\n  padding: 0.6em 1.4em 0.5em 0.8em;\n  width: 100%;\n  max-width: 100%; /* useful when width is set to anything other than 100% */\n  box-sizing: border-box;\n  margin: 0;\n  border: 1px solid $borderColor;\n  box-shadow: transparent;\n  border-radius: 0.5em;\n  appearance: none;\n  background-color: #fff;\n  background-image: url($gradient), $linearGradient;\n  background-repeat: no-repeat, repeat;\n  /* arrow icon position (1em from the right, 50% vertical) , then gradient position*/\n  background-position: right 0.7em top 50%, 0 0;\n  /* icon size, then gradient */\n  background-size: 0.65em auto, 100%;\n\n  /* Hide arrow icon in IE browsers */\n  &::-ms-expand {\n    display: none;\n  }\n  /* Hover style */\n  &:hover {\n    border-color: rgb(197, 197, 197);\n  }\n  /* Focus style */\n  &:focus {\n    border-color: $borderColor;\n    box-shadow: 0 0 1px 3px rgba(59, 153, 252, 0.7);\n    box-shadow: 0 0 0 3px -moz-mac-focusring;\n    color: #222;\n    outline: none;\n  }\n\n  /* Set options to normal weight */\n  option {\n    font-weight: normal;\n  }\n\n  /* Disabled styles */\n  &:disabled,\n  &[aria-disabled=\"true\"] {\n    color: gray;\n    background-image: url(\"data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E\"),\n      linear-gradient(to bottom, #ffffff 0%, #ffffff 100%);\n  }\n\n  &:disabled:hover,\n  &[aria-disabled=\"true\"] {\n    border-color: $borderColor;\n  }\n}\n\n.multi-filter-list {\n  margin-top: 5px;\n  margin-bottom: 5px;\n\n  div {\n    white-space: nowrap;\n  }\n\n  .multi-filter-list-action {\n    display: flex;\n\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .and-or-button {\n    margin: 0 0 0 10px;\n    min-width: 58px;\n    cursor: pointer;\n  }\n  .trash-button {\n    $btn-remove-size: 22px;\n    margin: 0 0 -2px 6px;\n    cursor: pointer;\n\n    width: $btn-remove-size;\n    height: $btn-remove-size;\n    color: gray;\n    font-size: 18px;\n\n\n    .trash-img {\n      width: 1em;\n    }\n  }\n}\n\n.add-filter-divider {\n  display: block;\n  margin: 0 -10px 10px -10px;\n\n  border-bottom: 1px solid #d9d9d9;\n  height: 10px;\n  box-shadow: 0 4px 5px rgb(0 0 0 / 5%);\n}\n\n.select-input {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}","import { Component, h, Host, Listen, Prop, State, Event, EventEmitter, VNode, Method } from '@stencil/core';\nimport { FilterType } from './filter.service';\nimport { RevoGrid } from '../../interfaces';\nimport { AndOrButton, isFilterBtn, TrashButton } from './filter.button';\nimport { RevoButton } from '../../components/button/button';\nimport '../../utils/closestPolifill';\nimport { LogicFunction } from './filter.types';\nimport { FilterCaptions } from './filter.plugin';\nimport debounce from 'lodash/debounce';\n\n/**\n * @typedef FilterItem\n * @type {object}\n * @property {ColumnProp} prop - column id\n * @property {FilterType} type - filter type definition\n * @property {any} value - value for additional filtering, text value or some id\n */\nexport type FilterItem = {\n  prop?: RevoGrid.ColumnProp;\n  type?: FilterType;\n  value?: any;\n};\n\nexport type FilterData = {\n  id: number;\n  type: FilterType;\n  value?: any;\n  relation: 'and' | 'or';\n};\n\nexport type MultiFilterItem = {\n  [prop: string]: FilterData[];\n};\n\nexport type ShowData = {\n  x: number;\n  y: number;\n} & FilterItem;\n\nconst defaultType: FilterType = 'contains';\n\nconst FILTER_LIST_CLASS = 'multi-filter-list';\nconst FILTER_LIST_CLASS_ACTION = 'multi-filter-list-action';\n\n@Component({\n  tag: 'revogr-filter-panel',\n  styleUrl: 'filter.style.scss',\n})\nexport class FilterPanel {\n  private filterCaptionsInternal: FilterCaptions = {\n    title: 'Filter by condition',\n    save: 'Save',\n    reset: 'Reset',\n    cancel: 'Close',\n  };\n  @State() isFilterIdSet = false;\n  @State() filterId = 0;\n  @State() currentFilterId: number = -1;\n  @State() currentFilterType: FilterType = defaultType;\n  @State() changes: ShowData | undefined;\n  @Prop({ mutable: true, reflect: true }) uuid: string;\n  @Prop() filterItems: MultiFilterItem = {};\n  @Prop() filterTypes: Record<string, string[]> = {};\n  @Prop() filterNames: Record<string, string> = {};\n  @Prop() filterEntities: Record<string, LogicFunction> = {};\n  @Prop() filterCaptions: FilterCaptions | undefined;\n  @Prop() disableDynamicFiltering: boolean = false;\n  @Event() filterChange: EventEmitter<MultiFilterItem>;\n  @Listen('mousedown', { target: 'document' }) onMouseDown(e: MouseEvent): void {\n    if (this.changes && !e.defaultPrevented) {\n      const el = e.target as HTMLElement;\n      if (this.isOutside(el) && !isFilterBtn(el)) {\n        this.changes = undefined;\n      }\n    }\n  }\n  @Method() async show(newEntity?: ShowData) {\n    this.changes = newEntity;\n    if (this.changes) {\n      this.changes.type = this.changes.type || defaultType;\n    }\n  }\n\n  @Method() async getChanges() {\n    return this.changes;\n  }\n\n  componentWillRender() {\n    if (!this.isFilterIdSet) {\n      this.isFilterIdSet = true;\n      const filterItems = Object.keys(this.filterItems);\n      for (const prop of filterItems) {\n        // we set the proper filterId so there won't be any conflict when removing filters\n        this.filterId += this.filterItems[prop].length;\n      }\n    }\n  }\n\n  renderSelectOptions(type: FilterType, isDefaultTypeRemoved = false) {\n    const options: VNode[] = [];\n    const prop = this.changes?.prop;\n\n    // if (!isDefaultTypeRemoved) {\n    //   options.push(\n    //     <option selected={this.currentFilterType === defaultType} value={defaultType}>\n    //       {prop && this.filterItems[prop] && this.filterItems[prop].length > 0 ? 'Add more condition...' : this.filterNames[defaultType]}\n    //     </option>,\n    //   );\n    // }\n\n    for (let gIndex in this.filterTypes) {\n      options.push(\n        ...this.filterTypes[gIndex].map(k => (\n          <option value={k} selected={type === k}>\n            {this.filterNames[k]}\n          </option>\n        )),\n      );\n      // options.push(<option disabled></option>);\n    }\n\n    return options;\n  }\n\n  renderExtra(prop: RevoGrid.ColumnProp, index: number) {\n    const currentFilter = this.filterItems[prop];\n\n    if (!currentFilter) return '';\n\n    if (this.filterEntities[currentFilter[index].type].extra !== 'input') return '';\n\n    return (\n      <input\n        id={`filter-input-${currentFilter[index].id}`}\n        // placeholder=\"Enter value...\"\n        type=\"text\"\n        value={currentFilter[index].value}\n        onInput={this.onUserInput.bind(this, index, prop)}\n        onKeyDown={e => this.onKeyDown(e)}\n      />\n    );\n  }\n\n  getFilterItemsList() {\n    const prop = this.changes?.prop;\n    if (!(prop || prop === 0)) return '';\n\n    if (!this.filterItems[prop]) {\n      this.addNewFilter(defaultType);\n    }\n\n    let propFilters = this.filterItems[prop]\n\n    return (\n      <div key={this.filterId}>\n        {propFilters.map((d, index) => {\n          let andOrButton;\n\n          // hide toggle button if there is only one filter and the last one\n          if (index !== this.filterItems[prop].length - 1) {\n            andOrButton = (\n              <div onClick={() => this.toggleFilterAndOr(d.id)}>\n                <AndOrButton isAnd={d.relation === 'and'} />\n              </div>\n            );\n          }\n\n          return (\n            <div key={d.id} class={FILTER_LIST_CLASS}>\n              <div class={{ 'select-input': true }}>\n                <select class=\"select-css select-filter\" onChange={e => this.onFilterTypeChange(e, prop, index)}>\n                  {this.renderSelectOptions(this.filterItems[prop][index].type, false)}\n                </select>\n                {/* <div class={FILTER_LIST_CLASS_ACTION}>{andOrButton}</div> */}\n                <div onClick={() => this.onReset()}>\n                  <TrashButton />\n                </div>\n              </div>\n              <div>{this.renderExtra(prop, index)}</div>\n            </div>\n          );\n        })}\n\n        {/* {propFilters.length > 0 ? <div class=\"add-filter-divider\"></div> : ''} */}\n      </div>\n    );\n  }\n\n  render() {\n    if (!this.changes) {\n      return <Host style={{ display: 'none' }}></Host>;\n    }\n    const style = {\n      display: 'block',\n      left: `${this.changes.x}px`,\n      top: `${this.changes.y}px`,\n    };\n\n    const capts = Object.assign(this.filterCaptionsInternal, this.filterCaptions);\n\n    return (\n      <Host style={style}>\n        <label>{capts.title}</label>\n        <div class=\"filter-holder\">{this.getFilterItemsList()}</div>\n\n        {/* <div class=\"add-filter\">\n          <select id=\"add-filter\" class=\"select-css\" onChange={e => this.onAddNewFilter(e)}>\n            {this.renderSelectOptions(this.currentFilterType)}\n          </select>\n        </div> */}\n        <div class=\"filter-actions\">\n          {this.disableDynamicFiltering &&\n            <RevoButton class={{ red: true, save: true }} onClick={() => this.onSave()}>\n              {capts.save}\n            </RevoButton>\n          }\n          {/* <RevoButton class={{ red: true, reset: true }} onClick={() => this.onReset()}>\n            {capts.reset}\n          </RevoButton> */}\n          {/* <RevoButton class={{ light: true, cancel: true }} onClick={() => this.onCancel()}>\n            {capts.cancel}\n          </RevoButton> */}\n        </div>\n      </Host>\n    );\n  }\n\n  private onFilterTypeChange(e: Event, prop: RevoGrid.ColumnProp, index: number) {\n    const el = e.target as HTMLSelectElement;\n    const type = el.value as FilterType;\n\n    this.filterItems[prop][index].type = type;\n\n    // this re-renders the input to know if we need extra input\n    this.filterId++;\n\n    // adding setTimeout will wait for the next tick DOM update then focus on input\n    setTimeout(() => {\n      const input = document.getElementById('filter-input-' + this.filterItems[prop][index].id) as HTMLInputElement;\n      if (input) input.focus();\n    }, 0);\n\n    if (!this.disableDynamicFiltering) this.debouncedApplyFilter();\n  }\n\n  private debouncedApplyFilter = debounce(() => {\n    this.filterChange.emit(this.filterItems);\n  }, 400);\n\n  private onAddNewFilter(e: Event) {\n    let el\n    let type: FilterType;\n\n    el = e.target as HTMLSelectElement;\n    type = el.value as FilterType;\n\n    this.addNewFilter(type);\n  }\n\n  private addNewFilter(type: FilterType) {\n    this.currentFilterType = type;\n    this.addNewFilterToProp();\n\n    // reset value after adding new filter\n    const select = document.getElementById('add-filter') as HTMLSelectElement;\n    if (select) {\n      select.value = defaultType;\n      this.currentFilterType = defaultType;\n    }\n\n    if (!this.disableDynamicFiltering) this.debouncedApplyFilter();\n  }\n\n  private addNewFilterToProp() {\n    const prop = this.changes?.prop;\n    if (!(prop || prop === 0)) return;\n\n    if (!this.filterItems[prop]) {\n      this.filterItems[prop] = [];\n    }\n\n    if (this.currentFilterType === 'none') return;\n\n    this.filterId++;\n    this.currentFilterId = this.filterId;\n\n    this.filterItems[prop].push({\n      id: this.currentFilterId,\n      type: this.currentFilterType,\n      value: '',\n      relation: 'and',\n    });\n\n    // adding setTimeout will wait for the next tick DOM update then focus on input\n    setTimeout(() => {\n      const input = document.getElementById('filter-input-' + this.currentFilterId) as HTMLInputElement;\n      if (input) input.focus();\n    }, 0);\n  }\n\n  private onUserInput(index: number, prop: RevoGrid.ColumnProp, event: Event) {\n    // update the value of the filter item\n    this.filterItems[prop][index].value = (event.target as HTMLInputElement).value;\n\n    if (!this.disableDynamicFiltering) this.debouncedApplyFilter();\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    if (e.key.toLowerCase() === 'enter') {\n      const select = document.getElementById('add-filter') as HTMLSelectElement;\n      if (select) {\n        select.value = defaultType;\n        this.currentFilterType = defaultType;\n        this.addNewFilterToProp();\n        select.focus();\n      }\n      return;\n    }\n    // keep event local, don't escalate farther to dom\n    e.stopPropagation();\n  }\n\n  private onSave() {\n    this.filterChange.emit(this.filterItems);\n  }\n\n  private onCancel() {\n    this.changes = undefined;\n  }\n\n  private onReset() {\n    this.assertChanges();\n\n    delete this.filterItems[this.changes.prop];\n\n    // this updates the DOM which is used by getFilterItemsList() key\n    this.filterId++;\n\n    this.filterChange.emit(this.filterItems);\n  }\n\n  private onRemoveFilter(id: number) {\n    this.assertChanges();\n\n    // this is for reactivity issues for getFilterItemsList()\n    this.filterId++;\n\n    const prop = this.changes.prop;\n\n    const items = this.filterItems[prop];\n    if (!items) return;\n\n    const index = items.findIndex(d => d.id === id);\n    if (index === -1) return;\n    items.splice(index, 1);\n\n    // let's remove the prop if no more filters so the filter icon will be removed\n    if (items.length === 0) delete this.filterItems[prop];\n\n    if (!this.disableDynamicFiltering) this.debouncedApplyFilter();\n  }\n\n  private toggleFilterAndOr(id: number) {\n    this.assertChanges();\n\n    // this is for reactivity issues for getFilterItemsList()\n    this.filterId++;\n\n    const prop = this.changes.prop;\n\n    const items = this.filterItems[prop];\n    if (!items) return;\n\n    const index = items.findIndex(d => d.id === id);\n    if (index === -1) return;\n\n    items[index].relation = items[index].relation === 'and' ? 'or' : 'and';\n    if (!this.disableDynamicFiltering) this.debouncedApplyFilter();\n  }\n\n  private assertChanges() {\n    if (!this.changes) {\n      throw new Error('Changes required per edit');\n    }\n  }\n\n  private isOutside(e: HTMLElement | null) {\n    const select = document.getElementById('add-filter') as HTMLSelectElement;\n    if (select) select.value = defaultType;\n\n    this.currentFilterType = defaultType;\n    this.changes.type = defaultType;\n    this.currentFilterId = -1;\n    if (e.classList.contains(`[uuid=\"${this.uuid}\"]`)) {\n      return false;\n    }\n    return !e?.closest(`[uuid=\"${this.uuid}\"]`);\n  }\n}\n"],"version":3}
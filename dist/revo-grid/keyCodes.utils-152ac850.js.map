{"version":3,"names":["codes","codesLetter","osPlatform","isLetterKey","code","isClear","BACKSPACE","DELETE","isTab","TAB","isEnterKey","ENTER","ENTER_NUM","isCut","event","ctrlKey","key","metaKey","isCopy","isPaste","isAll"],"sources":["src/utils/keyCodes.ts","src/utils/platform.ts","src/utils/keyCodes.utils.ts"],"sourcesContent":["enum codes {\n  MOUSE_LEFT = 1,\n  MOUSE_RIGHT = 3,\n  MOUSE_MIDDLE = 2,\n  BACKSPACE = 8,\n  COMMA = 188,\n  INSERT = 45,\n  DELETE = 46,\n  END = 35,\n  ENTER = 13,\n  ESCAPE = 27,\n  CONTROL = 17,\n  COMMAND_LEFT = 91,\n  COMMAND_RIGHT = 93,\n  COMMAND_FIREFOX = 224,\n  ALT = 18,\n  HOME = 36,\n  PAGE_DOWN = 34,\n  PAGE_UP = 33,\n  PERIOD = 190,\n  SPACE = 32,\n  SHIFT = 16,\n  CAPS_LOCK = 20,\n  TAB = 9,\n  ARROW_RIGHT = 39,\n  ARROW_LEFT = 37,\n  ARROW_UP = 38,\n  ARROW_DOWN = 40,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  A = 65,\n  C = 67,\n  D = 68,\n  F = 70,\n  L = 76,\n  O = 79,\n  P = 80,\n  S = 83,\n  V = 86,\n  X = 88,\n}\n\nenum codesLetter {\n  ENTER = 'Enter',\n  ENTER_NUM = 'NumpadEnter',\n  A = 'KeyA',\n  C = 'KeyC',\n  X = 'KeyX',\n  V = 'KeyV',\n  ESCAPE = 'Escape',\n  TAB = 'Tab',\n  BACKSPACE = 'Backspace',\n  DELETE = 'Delete',\n  ARROW_RIGHT = 'ArrowRight',\n  ARROW_LEFT = 'ArrowLeft',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n  SHIFT = 'Shift',\n}\n\nexport default codes;\nexport { codesLetter };\n","enum osPlatform {\n  mac = 'Mac',\n}\nexport default osPlatform;\n","import KeyCodesEnum, { codesLetter } from './keyCodes';\nimport OsPlatform from './platform';\nimport includes from 'lodash/includes';\n\nexport function isLetterKey(code: number): boolean {\n  return (\n    code === 32 || // space\n    (code >= 48 && code <= 57) ||\n    (code >= 96 && code <= 111) ||\n    (code >= 186 && code <= 192) ||\n    (code >= 219 && code <= 222) ||\n    code >= 226 ||\n    (code >= 65 && code <= 90)\n  ); // a-z\n}\n\nexport function isMetaKey(code: number): boolean {\n  const keys: KeyCodesEnum[] = [\n    KeyCodesEnum.ARROW_DOWN,\n    KeyCodesEnum.ARROW_UP,\n    KeyCodesEnum.ARROW_LEFT,\n    KeyCodesEnum.ARROW_RIGHT,\n    KeyCodesEnum.HOME,\n    KeyCodesEnum.END,\n    KeyCodesEnum.DELETE,\n    KeyCodesEnum.BACKSPACE,\n    KeyCodesEnum.F1,\n    KeyCodesEnum.F2,\n    KeyCodesEnum.F3,\n    KeyCodesEnum.F4,\n    KeyCodesEnum.F5,\n    KeyCodesEnum.F6,\n    KeyCodesEnum.F7,\n    KeyCodesEnum.F8,\n    KeyCodesEnum.F9,\n    KeyCodesEnum.F10,\n    KeyCodesEnum.F11,\n    KeyCodesEnum.F12,\n    KeyCodesEnum.TAB,\n    KeyCodesEnum.PAGE_DOWN,\n    KeyCodesEnum.PAGE_UP,\n    KeyCodesEnum.ENTER,\n    KeyCodesEnum.ESCAPE,\n    KeyCodesEnum.SHIFT,\n    KeyCodesEnum.CAPS_LOCK,\n    KeyCodesEnum.ALT,\n  ];\n\n  return keys.indexOf(code) !== -1;\n}\n\n// navigator.platform\nexport function isCtrlKey(code: number, platform: string): boolean {\n  if (platform.includes(OsPlatform.mac)) {\n    return includes([KeyCodesEnum.COMMAND_LEFT, KeyCodesEnum.COMMAND_RIGHT, KeyCodesEnum.COMMAND_FIREFOX], code);\n  }\n\n  return KeyCodesEnum.CONTROL === code;\n}\n\nexport function isCtrlMetaKey(code: KeyCodesEnum): boolean {\n  return includes([KeyCodesEnum.CONTROL, KeyCodesEnum.COMMAND_LEFT, KeyCodesEnum.COMMAND_RIGHT, KeyCodesEnum.COMMAND_FIREFOX], code);\n}\n\nexport function isClear(code: string): boolean {\n  return codesLetter.BACKSPACE === code || codesLetter.DELETE === code;\n}\n\nexport function isTab(code: string): boolean {\n  return codesLetter.TAB === code;\n}\n\nexport function isEnterKey(code: string): boolean {\n  return code === codesLetter.ENTER || code === codesLetter.ENTER_NUM;\n}\n\nexport function isCut(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'x') || // Ctrl + X on Windows\n  (event.metaKey && event.key === 'x');   // Cmd + X on Mac\n}\nexport function isCopy(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'c') || // Ctrl + C on Windows\n    (event.metaKey && event.key === 'c');   // Cmd + C on Mac\n}\nexport function isPaste(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'v') || // Ctrl + V on Windows\n  (event.metaKey && event.key === 'v');   // Cmd + V on Mac\n}\nexport function isAll(event: KeyboardEvent): boolean {\n  return  (event.ctrlKey && event.key === 'a') || // Ctrl + A on Windows\n  (event.metaKey && event.key === 'a');   // Cmd + A on Mac\n}\n"],"mappings":";;;2DAAA,IAAKA,GAAL,SAAKA,GACHA,IAAA,8BACAA,IAAA,gCACAA,IAAA,kCACAA,IAAA,4BACAA,IAAA,sBACAA,IAAA,uBACAA,IAAA,uBACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,uBACAA,IAAA,yBACAA,IAAA,mCACAA,IAAA,qCACAA,IAAA,0CACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,6BACAA,IAAA,yBACAA,IAAA,wBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,6BACAA,IAAA,gBACAA,IAAA,iCACAA,IAAA,+BACAA,IAAA,2BACAA,IAAA,+BACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,kBACAA,IAAA,kBACAA,IAAA,kBACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,aACAA,IAAA,YACD,EAlDD,CAAKA,MAAK,K,IAoDLC,GAAL,SAAKA,GACHA,EAAA,iBACAA,EAAA,2BACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,4BACAA,EAAA,0BACAA,EAAA,sBACAA,EAAA,0BACAA,EAAA,gBACD,EAhBD,CAAKA,MAAW,KCpDhB,IAAKC,GAAL,SAAKA,GACHA,EAAA,YACD,EAFD,CAAKA,MAAU,K,SCICC,EAAYC,GAC1B,OACEA,IAAS,IACRA,GAAQ,IAAMA,GAAQ,IACtBA,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,KAAOA,GAAQ,KACvBA,GAAQ,KAAOA,GAAQ,KACxBA,GAAQ,KACPA,GAAQ,IAAMA,GAAQ,EAE3B,C,SAkDgBC,EAAQD,GACtB,OAAOH,EAAYK,YAAcF,GAAQH,EAAYM,SAAWH,CAClE,C,SAEgBI,EAAMJ,GACpB,OAAOH,EAAYQ,MAAQL,CAC7B,C,SAEgBM,EAAWN,GACzB,OAAOA,IAASH,EAAYU,OAASP,IAASH,EAAYW,SAC5D,C,SAEgBC,EAAMC,GACpB,OAAQA,EAAMC,SAAWD,EAAME,MAAQ,KACtCF,EAAMG,SAAWH,EAAME,MAAQ,GAClC,C,SACgBE,EAAOJ,GACrB,OAAQA,EAAMC,SAAWD,EAAME,MAAQ,KACpCF,EAAMG,SAAWH,EAAME,MAAQ,GACpC,C,SACgBG,EAAQL,GACtB,OAAQA,EAAMC,SAAWD,EAAME,MAAQ,KACtCF,EAAMG,SAAWH,EAAME,MAAQ,GAClC,C,SACgBI,EAAMN,GACpB,OAASA,EAAMC,SAAWD,EAAME,MAAQ,KACvCF,EAAMG,SAAWH,EAAME,MAAQ,GAClC,Q"}
/*!
 * Built by Revolist
 */
import{h as t,H as e,I as s,g as o,s as n,J as i}from"./index-a937c03b.js";import{k as r,l as c,n as l}from"./viewport.helpers-b34b34b0.js";class a{get columns(){return t(this.source)}constructor(t,e){this.dataStore=t;this.source=e;this.unsubscribe=[];this.hasGrouping=false;this.unsubscribe.push(e.onChange("source",(t=>this.checkGrouping(t))));this.checkGrouping(e.get("source"));this.type=e.get("type")}checkGrouping(t){for(let e of t){if(r(e)){this.hasGrouping=true;return}this.hasGrouping=false}}isReadOnly(t,e){var s;const o=(s=this.columns[e])===null||s===void 0?void 0:s.readonly;if(typeof o==="function"){const s=this.rowDataModel(t,e);return o(s)}return o}static doMerge(t,e){let s=Object.assign(Object.assign({},e),t);if(e.class){if(typeof e.class==="object"&&typeof s.class==="object"){s.class=Object.assign(Object.assign({},e.class),s.class)}else if(typeof e.class==="string"&&typeof s.class==="object"){s.class[e.class]=true}else if(typeof s.class==="string"){s.class+=" "+e.class}}if(e.style){s.style=Object.assign(Object.assign({},e.style),s.style)}return s}mergeProperties(t,o,n){var i;const r={[e]:true,[s]:this.isReadOnly(t,o)};let c=Object.assign(Object.assign({},n),{class:r});const l=(i=this.columns[o])===null||i===void 0?void 0:i.cellProperties;if(l){const e=this.rowDataModel(t,o);const s=l(e);if(!s){return c}return a.doMerge(c,s)}return c}getRowClass(t,e){const s=o(this.dataStore,t)||{};return s[e]||""}getCellData(t,e){const s=this.rowDataModel(t,e);return a.getData(s.model[s.prop])}getSaveData(t,e,s){if(typeof s==="undefined"){s=this.getCellData(t,e)}const o=this.rowDataModel(t,e);return{prop:o.prop,rowIndex:t,colIndex:e,val:s,model:o.model,colType:this.type,type:this.dataStore.get("type")}}getCellEditor(t,e,s){var o;const n=(o=this.columns[e])===null||o===void 0?void 0:o.editor;if(!n){return undefined}if(typeof n==="string"){return s[n]}return n}rowDataModel(t,e){const s=this.columns[e];const n=s===null||s===void 0?void 0:s.prop;const i=o(this.dataStore,t)||{};const r=this.dataStore.get("type");return{prop:n,model:i,data:this.dataStore.get("source"),column:s,rowIndex:t,colIndex:e,colType:this.type,type:r}}getRangeData(t,e){var s;const n={};const i=t.oldRange.x1-t.oldRange.x+1;const r=t.oldRange.y1-t.oldRange.y+1;const c={};for(let l=t.newRange.y,a=0;l<t.newRange.y1+1;l++,a++){const h=t.oldRange.y+a%r;const u=o(this.dataStore,h)||{};for(let o=t.newRange.x,r=0;o<t.newRange.x1+1;o++,r++){if(l>=t.oldRange.y&&l<=t.oldRange.y1&&o>=t.oldRange.x&&o<=t.oldRange.x1){continue}if(!this.columns[o]){continue}const a=(s=this.columns[o])===null||s===void 0?void 0:s.prop;const f=t.oldRange.x+r%i;const d=e[f].prop;if(!this.isReadOnly(l,o)){if(!n[l]){n[l]={}}n[l][a]=u[d];if(!c[l]){c[l]={}}c[l][a]={colIndex:f,colProp:d,rowIndex:h}}}}return{changed:n,mapping:c}}getTransformedDataToApply(t,e){const s={};const o=e.length;const n=this.columns.length;const i=this.dataStore.get("items").length;let r=t.y;let c=0;for(let l=0;r<i&&l<o;r++,l++){const i=e[l%o];const a=(i===null||i===void 0?void 0:i.length)||0;let h=t.x;for(let t=0;h<n&&t<a;h++,t++){const e=this.columns[h].prop;const o=t%n;if(!this.isReadOnly(r,h)){if(!s[r]){s[r]={}}s[r][e]=i[o]}}c=Math.max(c,h-1)}const a=l(t,{y:r-1,x:c});return{changed:s,range:a}}applyRangeData(t){const e={};for(let s in t){const n=e[s]=o(this.dataStore,parseInt(s,10));if(!n){continue}for(let e in t[s]){n[e]=t[s][e]}}n(this.dataStore,e)}getRangeStaticData(t,e){const s={};for(let o=t.y,n=0;o<t.y1+1;o++,n++){for(let n=t.x,i=0;n<t.x1+1;n++,i++){if(!this.columns[n]){continue}const t=this.columns[n].prop;if(!this.isReadOnly(o,n)){if(!s[o]){s[o]={}}s[o][t]=e}}}return s}getRangeTransformedToProps(t,e){var s;const n=[];const i=this.dataStore.get("type");for(let r=t.y,c=0;r<t.y1+1;r++,c++){for(let c=t.x,l=0;c<t.x1+1;c++,l++){const t=(s=this.columns[c])===null||s===void 0?void 0:s.prop;n.push({prop:t,rowIndex:r,colIndex:c,model:o(e,r),type:i,colType:this.type})}}return n}copyRangeArray(t,e){const s=[...this.columns];const n=c.slice(s,t.x,t.x1+1).map((t=>t.prop));const i=[];const r={};for(let s=t.y;s<=t.y1;s++){const t=[];r[s]={};for(let i of n){const n=o(e,s);if(!n){continue}const c=n[i];t.push(c);r[s][i]=c}i.push(t)}return{data:i,mapping:r}}static getData(t){if(typeof t==="undefined"||t===null){return""}return t}destroy(){this.unsubscribe.forEach((t=>t()))}}const h={contentSize:0,clientSize:0,virtualSize:0,maxSize:0};const u=-1;class f{constructor(t){this.cfg=t;this.preventArtificialScroll={rgRow:null,rgCol:null};this.previousScroll={rgRow:u,rgCol:u};this.params={rgRow:Object.assign({},h),rgCol:Object.assign({},h)}}static getVirtualContentSize(t,e,s=0){return t+(s?e-s:0)}setParams(t,e){const s=f.getVirtualContentSize(t.contentSize,t.clientSize,t.virtualSize);this.params[e]=Object.assign(Object.assign({},t),{maxSize:s-t.clientSize,virtualContentSize:s})}async setScroll(t){this.cancelScroll(t.dimension);const e=new Promise(((e,s)=>{if(this.cfg.skipAnimationFrame){return e()}const o=window.requestAnimationFrame((()=>{e()}));this.preventArtificialScroll[t.dimension]=s.bind(null,o)}));try{await e;const s=this.getParams(t.dimension);t.coordinate=Math.ceil(t.coordinate);this.previousScroll[t.dimension]=this.wrapCoordinate(t.coordinate,s);this.preventArtificialScroll[t.dimension]=null;this.cfg.afterScroll(Object.assign(Object.assign({},t),{coordinate:s.virtualSize?this.convert(t.coordinate,s,false):t.coordinate}))}catch(t){window.cancelAnimationFrame(t)}}scroll(t,e,s=false,o,n=false){this.cancelScroll(e);if(!s&&this.previousScroll[e]===t){this.previousScroll[e]=u;return}const i=this.getParams(e);this.cfg.beforeScroll({dimension:e,coordinate:i.virtualSize?this.convert(t,i):t,delta:o,outside:n})}getParams(t){return this.params[t]}wrapCoordinate(t,e){if(t<0){return u}if(t>e.maxSize){return e.maxSize}return t}cancelScroll(t){const e=this.preventArtificialScroll[t];if(e){e();this.preventArtificialScroll[t]=null}}convert(t,e,s=true){const o=e.clientSize;const n=[0,e.virtualContentSize-o];const r=[0,e.contentSize-e.virtualSize];if(s){return i(t,n,r)}return i(t,r,n)}}export{a as C,f as L};
//# sourceMappingURL=localScrollService-9c3949fd.js.map
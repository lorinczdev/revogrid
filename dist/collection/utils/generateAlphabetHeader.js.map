{"version":3,"file":"generateAlphabetHeader.js","sourceRoot":"","sources":["../../src/utils/generateAlphabetHeader.ts"],"names":[],"mappings":"AAAA,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,MAAM,YAAY,GAAG,EAAE,CAAC;AAExB,MAAM,UAAU,cAAc,CAAC,KAAa;EAC1C,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;EACpB,IAAI,KAAK,GAAG,EAAE,CAAC;EACf,IAAI,GAAW,CAAC;EAChB,OAAO,GAAG,GAAG,CAAC,EAAE;IACd,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IAC/B,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;IAC5D,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;GAC7D;EACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,UAAkB;EACtD,MAAM,OAAO,GAAa,EAAE,CAAC;EAC7B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;IAC3C,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;GACjC;EACD,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["const asciiFirstLetter = 65;\nconst lettersCount = 26;\n\nexport function generateHeader(index: number): string {\n  let div = index + 1;\n  let label = '';\n  let pos: number;\n  while (div > 0) {\n    pos = (div - 1) % lettersCount;\n    label = String.fromCharCode(asciiFirstLetter + pos) + label;\n    div = parseInt(((div - pos) / lettersCount).toString(), 10);\n  }\n  return label;\n}\n\nexport function generateHeaderByCount(colsNumber: number): string[] {\n  const rowData: string[] = [];\n  for (let j: number = 0; j < colsNumber; j++) {\n    rowData.push(generateHeader(j));\n  }\n  return rowData;\n}\n"]}
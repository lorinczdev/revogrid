{"version":3,"file":"selection.store.js","sourceRoot":"","sources":["../../../src/store/selection/selection.store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAI/C,SAAS,YAAY;EACnB,OAAO;IACL,KAAK,EAAE,IAAI;IACX,SAAS,EAAE,IAAI;IACf,aAAa,EAAE,IAAI;IACnB,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,IAAI;GACf,CAAC;AACJ,CAAC;AAED,MAAM,OAAO,cAAc;EAGzB;IADQ,gBAAW,GAAmB,EAAE,CAAC;IAEvC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;IACzC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;MACnC,IAAI,GAAG,KAAK,WAAW,IAAI,CAAC,MAAM,EAAE;QAClC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;OACvC;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EAED,QAAQ,CAA+B,QAAa,EAAE,EAAuC;IAC3F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,UAAU;IACR,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;EAClF,CAAC;EAED,QAAQ,CAAC,KAAqB,EAAE,GAAoB;IAClD,IAAI,CAAC,GAAG,EAAE;MACR,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;KACjC;SAAM;MACL,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;QACnB,KAAK;QACL,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;QAC3B,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,IAAI;OAChB,CAAC,CAAC;KACJ;EACH,CAAC;EAED,WAAW,CAAC,KAAiC;IAC3C,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,EAAE,aAAa,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EAC3F,CAAC;EAED,SAAS;IACP,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;EAC5C,CAAC;EAED,iFAAiF;EACjF,YAAY,CAAC,KAA0B;IACrC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;EAC/D,CAAC;EACD,QAAQ,CAAC,KAAqB,EAAE,GAAmB;IACjD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,WAAW,CAAC,QAAwB;IAClC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;EACrC,CAAC;EAED,OAAO,CAAC,GAAqB;IAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;MACpC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;QACnB,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE;OACtC,CAAC,CAAC;MACH,OAAO;KACR;IACD,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACvC,CAAC;EAED,OAAO;IACL,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;EACvB,CAAC;CACF","sourcesContent":["import { createStore } from '@stencil/store';\nimport { Observable, Selection } from '../../interfaces';\nimport { setStore } from '../../utils/store.utils';\nimport { getRange } from './selection.helpers';\n\ntype StoreState = Selection.SelectionStoreState;\n\nfunction defaultState(): StoreState {\n  return {\n    range: null,\n    tempRange: null,\n    tempRangeType: null,\n    focus: null,\n    edit: null,\n    lastCell: null,\n  };\n}\n\nexport class SelectionStore {\n  readonly store: Observable<Selection.SelectionStoreState>;\n  private unsubscribe: { (): void }[] = [];\n  constructor() {\n    this.store = createStore(defaultState());\n    this.store.on('set', (key, newVal) => {\n      if (key === 'tempRange' && !newVal) {\n        this.store.set('tempRangeType', null);\n      }\n    });\n  }\n\n  onChange<Key extends keyof StoreState>(propName: Key, cb: (newValue: StoreState[Key]) => void) {\n    this.unsubscribe.push(this.store.onChange(propName, cb));\n  }\n\n  clearFocus() {\n    setStore(this.store, { focus: null, range: null, edit: null, tempRange: null });\n  }\n\n  setFocus(focus: Selection.Cell, end?: Selection.Cell) {\n    if (!end) {\n      setStore(this.store, { focus });\n    } else {\n      setStore(this.store, {\n        focus,\n        range: getRange(focus, end),\n        edit: null,\n        tempRange: null,\n      });\n    }\n  }\n\n  setTempArea(range: Selection.TempRange | null) {\n    setStore(this.store, { tempRange: range?.area, tempRangeType: range?.type, edit: null });\n  }\n\n  clearTemp() {\n    setStore(this.store, { tempRange: null });\n  }\n\n  /** Can be applied from selection change or from simple keyboard change clicks */\n  setRangeArea(range: Selection.RangeArea) {\n    setStore(this.store, { range, edit: null, tempRange: null });\n  }\n  setRange(start: Selection.Cell, end: Selection.Cell) {\n    this.setRangeArea(getRange(start, end));\n  }\n\n  setLastCell(lastCell: Selection.Cell) {\n    setStore(this.store, { lastCell });\n  }\n\n  setEdit(val: string | boolean) {\n    const focus = this.store.get('focus');\n    if (focus && typeof val === 'string') {\n      setStore(this.store, {\n        edit: { x: focus.x, y: focus.y, val },\n      });\n      return;\n    }\n    setStore(this.store, { edit: null });\n  }\n\n  dispose() {\n    this.unsubscribe.forEach(f => f());\n    this.store.dispose();\n  }\n}\n"]}
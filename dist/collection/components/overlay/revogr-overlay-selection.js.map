{"version":3,"file":"revogr-overlay-selection.js","sourceRoot":"","sources":["../../../src/components/overlay/revogr-overlay-selection.tsx"],"names":[],"mappings":"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":["import { Component, Event, EventEmitter, h, Host, Listen, Prop, VNode, Element, Watch } from '@stencil/core';\n\nimport { AllDimensionType, ApplyFocusEvent, FocusRenderEvent, Edition, Observable, RevoGrid, Selection, DragStartEvent } from '../../interfaces';\nimport ColumnService from '../data/columnService';\nimport SelectionStoreService from '../../store/selection/selection.store.service';\nimport { codesLetter } from '../../utils/keyCodes';\nimport { MOBILE_CLASS, SELECTION_BORDER_CLASS } from '../../utils/consts';\nimport { DataSourceState } from '../../store/dataSource/data.store';\nimport { isRangeSingleCell } from '../../store/selection/selection.helpers';\nimport { getCurrentCell, getElStyle } from './selection.utils';\nimport { isEditInput } from './editors/edit.utils';\nimport { KeyboardService } from './keyboard.service';\nimport { AutoFillService } from './autofill.service';\nimport { ClipboardService } from './clipboard.service';\nimport { getFromEvent, verifyTouchTarget } from '../../utils/events';\n\n@Component({\n  tag: 'revogr-overlay-selection',\n  styleUrl: 'revogr-overlay-style.scss',\n})\nexport class OverlaySelection {\n\n  @Element() element: HTMLElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * If readonly mode enables\n   */\n  @Prop() readonly: boolean;\n  /**\n   * Range selection mode\n   */\n  @Prop() range: boolean;\n  /**\n   * Enable revogr-order-editor component (read more in revogr-order-editor component)\n   * Allows D&D\n   */\n  @Prop() canDrag: boolean;\n\n  /**\n   * Enable revogr-clipboard component (read more in revogr-clipboard component)\n   * Allows copy/paste\n   */\n  @Prop() useClipboard: boolean;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Dynamic stores\n  //\n  // --------------------------------------------------------------------------\n  @Prop() selectionStore: Observable<Selection.SelectionStoreState>;\n  @Prop() dimensionRow: Observable<RevoGrid.DimensionSettingsState>;\n  @Prop() dimensionCol: Observable<RevoGrid.DimensionSettingsState>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Static stores, not expected to change during component lifetime\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Row data store\n   */\n  @Prop() dataStore: Observable<DataSourceState<RevoGrid.DataType, RevoGrid.DimensionRows>>;\n\n  /**\n   * Column data store\n   */\n  @Prop() colData: Observable<DataSourceState<RevoGrid.ColumnRegular, RevoGrid.DimensionCols>>;\n  /**\n   * Last cell position\n   */\n  @Prop() lastCell: Selection.Cell;\n  /**\n   * Custom editors register\n   */\n  @Prop() editors: Edition.Editors;\n  /**\n   * If true applys changes when cell closes if not Escape\n   */\n  @Prop() applyChangesOnClose: boolean = false;\n  /**\n   * Additional data to pass to renderer\n   */\n  @Prop() additionalData: any;\n\n  /**\n   * Is mobile view mode\n   */\n  @Prop() isMobileDevice: boolean;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Before clipboard copy happened\n   */\n  @Event({ cancelable: true }) internalCopy: EventEmitter;\n  /**\n   * Before paste happened\n   */\n  @Event({ cancelable: true }) internalPaste: EventEmitter;\n\n  @Event({ cancelable: true }) internalCellEdit: EventEmitter<Edition.BeforeSaveDataDetails>;\n  @Event({ cancelable: true }) beforeFocusCell: EventEmitter<Edition.BeforeSaveDataDetails>;\n\n  /**\n   * Set edit cell\n   */\n  @Event() setEdit: EventEmitter<Edition.BeforeEdit>;\n  @Event({ eventName: 'before-apply-range' }) beforeApplyRange: EventEmitter<FocusRenderEvent>;\n  /**\n   * Before range selection applied\n   */\n  @Event({ eventName: 'before-set-range' }) beforeSetRange: EventEmitter;\n  @Event({ eventName: 'before-edit-render' }) beforeEditRender: EventEmitter<FocusRenderEvent>;\n  @Event() setRange: EventEmitter<Selection.RangeArea & { type: RevoGrid.MultiDimensionType }>;\n  @Event({ eventName: 'selectall' }) selectAll: EventEmitter;\n  /**\n   * Used for editors support when close requested\n   */\n  @Event() cancelEdit: EventEmitter;\n  @Event() setTempRange: EventEmitter<Selection.TempRange | null>;\n\n  @Event() applyFocus: EventEmitter<FocusRenderEvent>;\n  @Event() focusCell: EventEmitter<ApplyFocusEvent>;\n  /** Range data apply */\n  @Event() beforeRangeDataApply: EventEmitter<FocusRenderEvent>;\n  /** Selection range changed */\n  @Event({ cancelable: true }) internalSelectionChanged: EventEmitter<Selection.ChangedRange>;\n  /** Selection range changed */\n  @Event({ cancelable: true, bubbles: true }) beforeRangeCopyApply: EventEmitter<Selection.ChangedRange>;\n\n  /** Range data apply */\n  @Event({ cancelable: true }) internalRangeDataApply: EventEmitter<Edition.BeforeRangeSaveDataDetails>;\n  /** Range copy */\n  @Event({ cancelable: true }) rangeClipboardCopy: EventEmitter;\n  @Event({ cancelable: true }) rangeClipboardPaste: EventEmitter;\n\n  /**\n   * Before key up event proxy, used to prevent key up trigger.\n   * If you have some custom behaviour event, use this event to check if it wasn't processed by internal logic.\n   * Call preventDefault()\n   */\n  @Event({ eventName: 'beforekeydown' }) beforeKeyDown: EventEmitter<KeyboardEvent>;\n  /**\n   * Before key down event proxy, used to prevent key down trigger.\n   * If you have some custom behaviour event, use this event to check if it wasn't processed by internal logic.\n   * Call preventDefault()\n   */\n  @Event({ eventName: 'beforekeyup' }) beforeKeyUp: EventEmitter<KeyboardEvent>;\n\n  protected columnService: ColumnService;\n\n  protected selectionStoreService: SelectionStoreService;\n  private keyboardService: KeyboardService | null = null;\n  private autoFillService: AutoFillService | null = null;\n  private clipboardService: ClipboardService | null = null;\n  private orderEditor: HTMLRevogrOrderEditorElement;\n  private revogrEdit: HTMLRevogrEditElement | null = null;\n  /**\n   * Runs before cell save\n   * Can be used to override or cancel original save\n   */\n  @Event({ eventName: 'before-cell-save', cancelable: true }) beforeCellSave: EventEmitter;\n  // --------------------------------------------------------------------------\n  //\n  //  Listeners\n  //\n  // --------------------------------------------------------------------------\n  @Listen('touchmove', { target: 'document' })\n  @Listen('mousemove', { target: 'document' })\n  onMouseMove(e: MouseEvent | TouchEvent) {\n    if (this.selectionStoreService.focused) {\n      this.autoFillService.selectionMouseMove(e);\n    }\n  }\n\n\n  /** Action finished inside of the document */\n  /** Pointer left document, clear any active operation */\n  @Listen('touchend', { target: 'document' })\n  @Listen('mouseup', { target: 'document' })\n  @Listen('mouseleave', { target: 'document' })\n  onMouseUp() {\n    this.autoFillService.clearAutoFillSelection();\n  }\n\n  /** Row drag started */\n  @Listen('dragStartCell') onCellDrag(e: CustomEvent<DragStartEvent>) {\n    this.orderEditor?.dragStart(e.detail);\n  }\n\n  /** Get keyboard down from element */\n  @Listen('keyup', { target: 'document' }) onKeyUp(e: KeyboardEvent) {\n    this.beforeKeyUp.emit(e);\n  }\n\n  /** Get keyboard down from element */\n  @Listen('keydown', { target: 'document' }) onKeyDown(e: KeyboardEvent) {\n    const proxy = this.beforeKeyDown.emit(e);\n    if (e.defaultPrevented || proxy.defaultPrevented) {\n      return;\n    }\n    this.keyboardService?.keyDown(e, this.range);\n  }\n\n  // selection & keyboard\n  @Watch('selectionStore') selectionServiceSet(s: Observable<Selection.SelectionStoreState>) {\n    this.selectionStoreService = new SelectionStoreService(s, {\n      changeRange: range => this.triggerRangeEvent(range),\n      focus: (focus, end) => this.doFocus(focus, end),\n    });\n\n    this.keyboardService = new KeyboardService({\n      selectionStoreService: this.selectionStoreService,\n      selectionStore: s,\n      range: r => this.selectionStoreService.changeRange(r),\n      focusNext: (f, next) => this.doFocus(f, f, next),\n      applyEdit: val => {\n        if (this.readonly) {\n          return;\n        }\n        this.doEdit(val);\n      },\n      cancelEdit: async () => {\n        await this.revogrEdit.cancel();\n        this.closeEdit();\n      },\n      clearCell: () => !this.readonly && this.clearCell(),\n      internalPaste: () => !this.readonly && this.internalPaste.emit(),\n      getData: () => this.getData(),\n      selectAll: () => this.selectAll.emit(),\n    });\n    this.createAutoFillService();\n    this.createClipboardService();\n  }\n  // autofill\n  @Watch('dimensionRow')\n  @Watch('dimensionCol')\n  createAutoFillService() {\n    this.autoFillService = new AutoFillService({\n      selectionStoreService: this.selectionStoreService,\n      dimensionRow: this.dimensionRow,\n      dimensionCol: this.dimensionCol,\n      columnService: this.columnService,\n      dataStore: this.dataStore,\n\n      clearRangeDataApply: e =>\n        this.beforeRangeDataApply.emit({\n          ...e,\n          ...this.types,\n        }),\n      setTempRange: e => this.setTempRange.emit(e),\n      selectionChanged: e => this.internalSelectionChanged.emit(e),\n      rangeCopy: e => this.beforeRangeCopyApply.emit(e),\n      rangeDataApply: e => this.internalRangeDataApply.emit(e),\n\n      setRange: e => this.triggerRangeEvent(e),\n      getData: () => this.getData(),\n    });\n  }\n\n  // columns\n  @Watch('dataStore')\n  @Watch('colData')\n  columnServiceSet() {\n    this.columnService?.destroy();\n    this.columnService = new ColumnService(this.dataStore, this.colData);\n    this.createAutoFillService();\n    this.createClipboardService();\n  }\n\n  // clipboard\n  createClipboardService() {\n    this.clipboardService = new ClipboardService({\n      selectionStoreService: this.selectionStoreService,\n      columnService: this.columnService,\n      dataStore: this.dataStore,\n      rangeApply: (d, r) => this.autoFillService.onRangeApply(d, r),\n      rangeCopy: range => {\n        if (!range) {\n          return undefined;\n        }\n        const { data, mapping } = this.columnService.copyRangeArray(range, this.dataStore);\n        const event = this.rangeClipboardCopy.emit({\n          range,\n          data,\n          mapping,\n          ...this.types,\n        });\n        if (event.defaultPrevented) {\n          return undefined;\n        }\n        return event.detail.data;\n      },\n      rangeClear: () => !this.readonly && this.clearCell(),\n      beforeCopy: range => this.internalCopy.emit(range),\n      beforePaste: (data, range) => {\n        return this.rangeClipboardPaste.emit({\n          data,\n          range,\n          ...this.types,\n        });\n      },\n    });\n  }\n\n  connectedCallback() {\n    this.columnServiceSet();\n    this.selectionServiceSet(this.selectionStore);\n  }\n\n  disconnectedCallback() {\n    this.columnService?.destroy();\n  }\n\n  private renderRange(range: Selection.RangeArea) {\n    const style = getElStyle(range, this.dimensionRow.state, this.dimensionCol.state);\n    return [\n      <div class={SELECTION_BORDER_CLASS} style={style}>\n        {this.isMobileDevice && <div class=\"range-handlers\"><span class={MOBILE_CLASS}></span><span class={MOBILE_CLASS}></span></div>}\n      </div>\n    ];\n  }\n\n  private renderEditCell() {\n    // if can edit\n    const editCell = this.selectionStore.get('edit');\n    if (this.readonly || !editCell) {\n      return null;\n    }\n    const val = editCell.val || this.columnService.getCellData(editCell.y, editCell.x);\n    const editable = {\n      ...editCell,\n      ...this.columnService.getSaveData(editCell.y, editCell.x, val),\n    };\n    const renderEvent = this.beforeEditRender.emit({\n      range: {\n        ...editCell,\n        x1: editCell.x,\n        y1: editCell.y,\n      },\n      ...this.types,\n    });\n    if (renderEvent.defaultPrevented) {\n      return null;\n    }\n\n    const {\n      detail: { range },\n    } = renderEvent;\n    const style = getElStyle(range, this.dimensionRow.state, this.dimensionCol.state);\n    return (\n      <revogr-edit\n        ref={el => {\n          this.revogrEdit = el;\n        }}\n        onCellEdit={e => {\n          const saveEv = this.beforeCellSave.emit(e.detail);\n          if (!saveEv.defaultPrevented) {\n            this.cellEdit(saveEv.detail);\n          }\n\n          // if not clear navigate to next cell after edit\n          if (!saveEv.detail.preventFocus) {\n            this.focusNext();\n          }\n        }}\n        onCloseEdit={e => this.closeEdit(e)}\n        editCell={editable}\n        saveOnClose={this.applyChangesOnClose}\n        column={this.columnService.columns[editCell.x]}\n        editor={this.columnService.getCellEditor(editCell.y, editCell.x, this.editors)}\n        additionalData={this.additionalData}\n        style={style}\n      />\n    );\n  }\n\n  render() {\n    const els: VNode[] = [];\n    const editCell = this.renderEditCell();\n    if (editCell) {\n      els.push(editCell);\n    } else {\n      const range = this.selectionStoreService.ranged;\n      const selectionFocus = this.selectionStoreService.focused;\n      if ((range || selectionFocus) && this.useClipboard) {\n        els.push(this.clipboardService.renderClipboard(this.readonly));\n      }\n\n      if (range) {\n        els.push(...this.renderRange(range));\n      }\n      if (selectionFocus && !this.readonly && this.range) {\n        els.push(this.autoFillService.renderAutofill(range, selectionFocus));\n      }\n      if (this.canDrag) {\n        els.push(\n          <revogr-order-editor\n            ref={e => (this.orderEditor = e)}\n            dataStore={this.dataStore}\n            dimensionRow={this.dimensionRow}\n            dimensionCol={this.dimensionCol}\n            parent={this.element}\n            onInternalRowDragStart={e => this.onRowDragStart(e)}\n          />,\n        );\n      }\n    }\n    return (\n      <Host\n        class={{ mobile: this.isMobileDevice }}\n        // run edit on dblclick\n        onDblClick={(e: MouseEvent) => {\n          // if dblclick prevented outside edit will not start\n          if (!e.defaultPrevented) {\n            this.doEdit();\n          }\n        }}\n        onMouseDown={(e: MouseEvent) => this.onElementMouseDown(e)}\n        onTouchStart={(e: TouchEvent) => this.onElementMouseDown(e, true)}>\n        {els}\n        <slot name=\"data\" />\n      </Host>\n    );\n  }\n\n  private doFocus(focus: Selection.Cell, end: Selection.Cell, next?: Partial<Selection.Cell>) {\n    const { defaultPrevented } = this.beforeFocusCell.emit(this.columnService.getSaveData(focus.y, focus.x));\n    if (defaultPrevented) {\n      return false;\n    }\n    const evData = {\n      range: {\n        ...focus,\n        x1: end.x,\n        y1: end.y,\n      },\n      next,\n      ...this.types,\n    };\n    const applyEvent = this.applyFocus.emit(evData);\n    if (applyEvent.defaultPrevented) {\n      return false;\n    }\n    const { range } = applyEvent.detail;\n    return !this.focusCell.emit({\n      focus: {\n        x: range.x,\n        y: range.y,\n      },\n      end: {\n        x: range.x1,\n        y: range.y1,\n      },\n      ...applyEvent.detail,\n    }).defaultPrevented;\n  }\n\n  private triggerRangeEvent(range: Selection.RangeArea) {\n    const type = this.types.rowType;\n    const applyEvent = this.beforeApplyRange.emit({\n      range: { ...range },\n      ...this.types,\n    });\n    if (applyEvent.defaultPrevented) {\n      return false;\n    }\n    const data = this.columnService.getRangeTransformedToProps(applyEvent.detail.range, this.dataStore);\n    let e = this.beforeSetRange.emit(data);\n    e = this.setRange.emit({ ...applyEvent.detail.range, type });\n    if (e.defaultPrevented) {\n      return false;\n    }\n    return !e.defaultPrevented;\n  }\n\n  protected onElementMouseDown(e: MouseEvent | TouchEvent, touch = false) {\n    // Ignore focus if clicked input\n    if (isEditInput(e.target as HTMLElement | undefined)) {\n      return;\n    }\n    const data = this.getData();\n    if (e.defaultPrevented) {\n      return;\n    }\n    const x = getFromEvent(e, 'clientX');\n    const y = getFromEvent(e, 'clientY');\n    // skip touch\n    if (x === null || y === null) {\n      return;\n    }\n    // Regular cell click\n    const focusCell = getCurrentCell({ x, y }, data);\n    this.selectionStoreService.focus(focusCell, this.range && e.shiftKey);\n\n    // Initiate autofill selection\n    if (this.range) {\n      this.autoFillService.selectionStart(e.target as HTMLElement, data);\n      if (!touch) {\n        e.preventDefault();\n      } else if (verifyTouchTarget((e as TouchEvent).touches[0], MOBILE_CLASS)) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /** \n   * Start cell editing\n   */\n  protected doEdit(val = '') {\n    if (this.canEdit()) {\n      const editCell = this.selectionStore.get('focus');\n      const data = this.columnService.getSaveData(editCell.y, editCell.x);\n      this.setEdit?.emit({\n        ...data,\n        val,\n      });\n    }\n  }\n\n  /**\n   * Close editor event triggered\n   * @param details - if requires focus next\n   */\n  private closeEdit(e?: CustomEvent<boolean>) {\n    this.cancelEdit.emit();\n    if (e?.detail) {\n      this.focusNext();\n    }\n  }\n\n  /** Edit finished, close cell and save */\n  protected cellEdit(e: Edition.SaveDataDetails) {\n    const dataToSave = this.columnService.getSaveData(e.rgRow, e.rgCol, e.val);\n    this.internalCellEdit.emit(dataToSave);\n  }\n\n  private async focusNext() {\n    const canFocus = await this.keyboardService.keyChangeSelection(\n      new KeyboardEvent('keydown', {\n        code: codesLetter.ARROW_DOWN,\n      }),\n      this.range,\n    );\n    if (!canFocus) {\n      this.closeEdit();\n    }\n  }\n\n  protected clearCell() {\n    if (this.selectionStoreService.ranged && !isRangeSingleCell(this.selectionStoreService.ranged)) {\n      const data = this.columnService.getRangeStaticData(this.selectionStoreService.ranged, '');\n      this.autoFillService.onRangeApply(data, this.selectionStoreService.ranged);\n    } else if (this.canEdit()) {\n      const focused = this.selectionStoreService.focused;\n      const cell = this.columnService.getSaveData(focused.y, focused.x);\n      this.cellEdit({\n        rgRow: focused.y,\n        rgCol: focused.x,\n        val: '',\n        type: cell.type,\n        prop: cell.prop,\n      });\n    }\n  }\n\n  private onRowDragStart({ detail }: CustomEvent<{ cell: Selection.Cell; text: string }>) {\n    detail.text = this.columnService.getCellData(detail.cell.y, detail.cell.x);\n  }\n\n  /** Check if edit possible */\n  protected canEdit() {\n    if (this.readonly) {\n      return false;\n    }\n    const editCell = this.selectionStoreService.focused;\n    return editCell && !this.columnService?.isReadOnly(editCell.y, editCell.x);\n  }\n\n  get types(): AllDimensionType {\n    return {\n      rowType: this.dataStore.get('type'),\n      colType: this.columnService.type,\n    };\n  }\n\n  /** Collect data from element */\n  protected getData() {\n    return {\n      el: this.element,\n      rows: this.dimensionRow.state,\n      cols: this.dimensionCol.state,\n      lastCell: this.lastCell,\n    };\n  }\n}\n"]}
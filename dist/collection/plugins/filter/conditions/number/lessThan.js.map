{"version":3,"file":"lessThan.js","sourceRoot":"","sources":["../../../../../src/plugins/filter/conditions/number/lessThan.ts"],"names":[],"mappings":"AAEA,MAAM,EAAE,GAAkB,UAAU,KAAyB,EAAE,KAA+B;EAC5F,IAAI,cAAsB,CAAC;EAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,cAAc,GAAG,UAAU,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE,CAAC,CAAC;IAC/C,OAAO,KAAK,GAAG,cAAc,CAAC;GAC/B;OAAM;IACL,OAAO,KAAK,CAAC;GACd;AACH,CAAC,CAAC;AAEF,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;AACnB,eAAe,EAAE,CAAC","sourcesContent":["import { LogicFunction, LogicFunctionExtraParam, LogicFunctionParam } from '../../filter.types';\n\nconst lt: LogicFunction = function (value: LogicFunctionParam, extra?: LogicFunctionExtraParam) {\n  let conditionValue: number;\n  if (typeof value === 'number') {\n    conditionValue = parseFloat(extra?.toString());\n    return value < conditionValue;\n  } else {\n    return false;\n  }\n};\n\nlt.extra = 'input';\nexport default lt;\n"]}
{"version":3,"file":"greaterThan.js","sourceRoot":"","sources":["../../../../../src/plugins/filter/conditions/number/greaterThan.ts"],"names":[],"mappings":"AAEA,MAAM,MAAM,GAAkB,UAAU,KAAyB,EAAE,KAA+B;EAChG,IAAI,cAAsB,CAAC;EAE3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,cAAc,GAAG,UAAU,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE,CAAC,CAAC;IAC/C,OAAO,KAAK,GAAG,cAAc,CAAC;GAC/B;EACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;AACvB,eAAe,MAAM,CAAC","sourcesContent":["import { LogicFunction, LogicFunctionExtraParam, LogicFunctionParam } from '../../filter.types';\n\nconst gtThan: LogicFunction = function (value: LogicFunctionParam, extra?: LogicFunctionExtraParam) {\n  let conditionValue: number;\n\n  if (typeof value === 'number') {\n    conditionValue = parseFloat(extra?.toString());\n    return value > conditionValue;\n  }\n  return false;\n};\n\ngtThan.extra = 'input';\nexport default gtThan;\n"]}
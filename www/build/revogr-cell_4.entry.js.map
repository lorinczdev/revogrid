{"version":3,"names":["PADDING_DEPTH","RowRenderer","rowClass","index","size","start","depth","cells","props","Object","assign","DATA_ROW","h","class","style","height","transform","paddingLeft","undefined","RevogridCellRenderer","render","model","this","columnService","rowDataModel","rowIndex","colIndex","cellEvent","beforeCellRender","emit","column","itemIndex","colStart","end","colEnd","colSize","row","rowStart","rowEnd","rowSize","rowType","providers","type","colType","defaultPrevented","detail","columnProps","rowProps","defaultProps","DATA_COL","width","mergeProperties","tpl","_a","columns","cellTemplate","Host","additionalData","console","error","els","rowDrag","isRowDragService","push","DRAGGABLE_CLASS","onMouseDown","originalEvent","dragStartCell","DRAG_ICON_CLASS","ColumnService","getData","prop","expandEvent","e","virtualIndex","event","CustomEvent","GROUP_EXPAND_EVENT","cancelable","bubbles","target","dispatchEvent","GroupingRowRenderer","hasExpand","groupingCustomRenderer","name","PSEUDO_GROUP_ITEM","expanded","GROUP_EXPANDED","parseInt","GROUP_DEPTH","onClick","GROUP_EXPAND_BTN","focusable","viewBox","fill","d","revogrDataStyleCss","RevogrData","renderedRows","Map","currentRange","onStoreChange","destroy","dataStore","colData","data","viewport","viewportCol","dimension","dimensionRow","selection","rowSelectionStore","_b","rangeUnsubscribe","call","onChange","forEach","y","y1","$elm$","HTMLElement","classList","contains","ROW_FOCUSED_CLASS","remove","get","add","connectedCallback","disconnectedCallback","componentDidRender","afterrender","rows","viewportRow","cols","length","rowsEls","rgRow","dataItem","getSourceItem","isGrouping","hasGrouping","getRowClass","rgCol","beforeRowRender","node","item","set","defineProperty","func","getNative","_defineProperty","baseAssignValue","object","key","value","configurable","enumerable","writable","_baseAssignValue","arrayAggregator","array","setter","iteratee","accumulator","_arrayAggregator","baseAggregator","collection","baseEach","_baseAggregator","createAggregator","initializer","isArray","baseIteratee","_createAggregator","keyBy","result","keyBy_1","SortingSign","order","ResizeEvents","RESIZE_MASK","bit","cursor","DISABLE_MASK","l","t","w","fitParent","active","disableAttributes","minWidth","minHeight","ResizeDirective","constructor","initialProps","$event","mouseX","mouseY","changeX","changeY","disableCalcMap","mouseMoveFunc","handleMove","bind","mouseUpFunc","handleUp","minW","minH","maxW","maxWidth","maxH","maxHeight","parent","resizeState","$el","attr","emitEvent","eventName","additionalOptions","isLeft","activeResizer","changedX","changedY","isTouchEvent","touches","eventY","eventX","clientY","clientX","isX","isY","diffY","newHeight","bottom","diffX","newWidth","right","left","move","handleDown","preventDefault","dropInitial","elClass","document","body","setInitials","bindMove","unbindMove","computedStyle","getComputedStyle","clientWidth","parentElement","minPaddingX","parseFloat","paddingRight","Math","max","clientHeight","minPaddingY","paddingTop","paddingBottom","removeAttribute","documentElement","addEventListener","removeEventListener","ResizableElement","children","resizeEls","directive","canResize","onResize","p","onDblClick","onDoubleClick","onTouchStart","ref","ON_COLUMN_CLICK","HeaderCellRenderer","colTemplate","cellProps","columnTemplate","columnProperties","extra","doMerge","dispatch","currentTarget","HeaderRenderer","cellClass","HEADER_CLASS","HEADER_SORTABLE_CLASS","sortable","dataProps","_c","minSize","MIN_COL_SIZE","_d","maxSize","range","x","x1","FOCUS_CLASS","_e","canFilter","_f","filter","FilterButton","GroupHeaderRenderer","groupProps","group","ids","ColumnGroupsRenderer","groups","visibleProps","dimensionCol","groupRow","i","indexFirstVisibleCol","findIndex","id","colVisibleIndex","groupStartIndex","groupEndIndex","groupStart","getItemByIndex","groupEnd","HEADER_ROW_CLASS","revogrHeaderStyleCss","RevogrHeaderComponent","col","beforeResize","headerresize","onResizeGroup","startIndex","endIndex","sizes","change","selectionStore","columnFilter","resizeHandler","headerdblClick","initialHeaderClick","state","groupingDepth","HEADER_ACTUAL_ROW_CLASS","FUNC_ERROR_TEXT","throttle","wait","options","leading","trailing","TypeError","isObject","debounce","maxWait","throttle_1","async","resizeObserver","window","module","import","ResizeObserver","GridResizeService","el","events","resize","o","init","observe","disconnect","revogrViewportScrollStyleCss","RevogrViewportScroll","scrollThrottling","oldValY","contentHeight","oldValX","contentWidth","mouseWheelScrollTimestamp","lastKnownScrollCoordinate","setScroll","latestScrollUpdate","scrollService","changeScroll","silent","coordinate","verticalScroll","delta","horizontalScroll","scrollLeft","scrollTop","mousewheelVertical","verticalMouseWheel","mousewheelHorizontal","horizontalMouseWheel","scrollApply","applyOnScroll","onVerticalMouseWheel","onHorizontalMouseWheel","LocalScrollService","beforeScroll","scrollViewport","afterScroll","componentDidLoad","resizeService","entries","contentRect","header","footer","contentSize","scroll","each","resizeViewport","rowHeader","setScrollVisibility","innerContentSize","hasScroll","scrollchange","setParams","clientSize","virtualSize","onWheel","onScroll","HEADER_SLOT","CONTENT_SLOT","FOOTER_SLOT","silentScroll","outside","Date","getTime","pos"],"sources":["src/components/data/rowRenderer.tsx","src/components/data/revogr-cell.tsx","src/plugins/groupingRow/grouping.row.renderer.tsx","src/components/data/revogr-data-style.scss?tag=revogr-data","src/components/data/revogr-data.tsx","node_modules/lodash/_defineProperty.js","node_modules/lodash/_baseAssignValue.js","node_modules/lodash/_arrayAggregator.js","node_modules/lodash/_baseAggregator.js","node_modules/lodash/_createAggregator.js","node_modules/lodash/keyBy.js","src/plugins/sorting/sorting.sign.tsx","src/services/resizable.directive.tsx","src/services/resizable.element.tsx","src/components/header/headerCellRenderer.tsx","src/components/header/headerRenderer.tsx","src/plugins/groupingColumn/headerGroupRenderer.tsx","src/plugins/groupingColumn/columnGroupsRenderer.tsx","src/components/header/revogr-header-style.scss?tag=revogr-header","src/components/header/revogr-header.tsx","node_modules/lodash/throttle.js","src/utils/resizeObserver.ts","src/components/revoGrid/viewport.resize.service.ts","src/components/scroll/revogr-viewport-scroll-style.scss?tag=revogr-viewport-scroll","src/components/scroll/revogr-viewport-scroll.tsx"],"sourcesContent":["import { h, VNode } from '@stencil/core';\nimport { JSXBase } from '@stencil/core/internal';\nimport { DATA_ROW } from '../../utils/consts';\n\nexport interface RowProps extends JSXBase.HTMLAttributes {\n  size: number;\n  start: number;\n  index: number;\n  rowClass?: string;\n  depth?: number;\n}\n\nexport const PADDING_DEPTH = 10;\n\nconst RowRenderer = ({ rowClass, index, size, start, depth }: RowProps, cells: VNode[]) => {\n  const props = {\n    ...{ [DATA_ROW]: index },\n  };\n  return (\n    <div\n      {...props}\n      class={`rgRow ${rowClass || ''}`}\n      style={{\n        height: `${size}px`,\n        transform: `translateY(${start}px)`,\n        paddingLeft: depth ? `${PADDING_DEPTH * depth}px` : undefined,\n      }}\n    >\n      {cells}\n    </div>\n  );\n};\n\nexport default RowRenderer;\n","import { Component, Event, Prop, EventEmitter, h, VNode, Host } from '@stencil/core';\nimport {\n  BeforeCellRenderEvent,\n  DragStartEvent,\n  RevoGrid,\n} from '../../interfaces';\nimport {\n  DATA_COL,\n  DATA_ROW,\n  DRAGGABLE_CLASS,\n  DRAG_ICON_CLASS,\n} from '../../utils/consts';\nimport ColumnService from './columnService';\nimport { PADDING_DEPTH } from './rowRenderer';\n/**\n * Component is responsible for rendering cell\n * Main purpose is to track changes and understand what exactly need to be rerendered instead of full grid render\n */\n@Component({\n  tag: 'revogr-cell',\n})\nexport class RevogridCellRenderer {\n  /**\n   * Additional data to pass to renderer\n   * Used in plugins such as vue or react to pass root app entity to cells\n   */\n  @Prop() additionalData: any;\n  /**\n   * Column service\n   */\n  @Prop() columnService!: ColumnService;\n  /**\n   * Cached providers\n   */\n  @Prop() providers!: RevoGrid.Providers;\n  /**\n   * Grouping\n   */\n  @Prop() depth: number;\n\n  /**\n   * Row props passed via property\n   */\n  @Prop() rowIndex!: number;\n  @Prop() rowStart!: number;\n  @Prop() rowEnd!: number;\n  @Prop() rowSize!: number;\n\n  /**\n   * Column props passed via property\n   */\n  @Prop() colIndex!: number;\n  @Prop() colStart!: number;\n  @Prop() colEnd!: number;\n  @Prop() colSize!: number;\n\n  /**\n   * Before each cell render function. Allows to override cell properties\n   */\n  @Event({ eventName: 'before-cell-render' })\n  beforeCellRender: EventEmitter<BeforeCellRenderEvent>;\n  @Event({ eventName: 'dragStartCell' })\n  dragStartCell: EventEmitter<DragStartEvent>;\n\n  render() {\n    const model = this.columnService.rowDataModel(this.rowIndex, this.colIndex);\n    const cellEvent = this.beforeCellRender.emit({\n      column: {\n        itemIndex: this.colIndex,\n        start: this.colStart,\n        end: this.colEnd,\n        size: this.colSize,\n      },\n      row: {\n        itemIndex: this.rowIndex,\n        start: this.rowStart,\n        end: this.rowEnd,\n        size: this.rowSize,\n      },\n      model,\n      rowType: this.providers.type,\n      colType: this.columnService.type,\n    });\n    if (cellEvent.defaultPrevented) {\n      return;\n    }\n    const {\n      detail: { column: columnProps, row: rowProps },\n    } = cellEvent;\n    const defaultProps: RevoGrid.CellProps = {\n      [DATA_COL]: columnProps.itemIndex,\n      [DATA_ROW]: rowProps.itemIndex,\n      style: {\n        width: `${columnProps.size}px`,\n        transform: `translateX(${columnProps.start}px)`,\n        height: rowProps.size ? `${rowProps.size}px` : undefined,\n      },\n    };\n    /**\n     * For grouping, can be removed in the future and replaced with event\n     */\n    if (this.depth && !columnProps.itemIndex) {\n      defaultProps.style.paddingLeft = `${PADDING_DEPTH * this.depth}px`;\n    }\n    const props = this.columnService.mergeProperties(\n      rowProps.itemIndex,\n      columnProps.itemIndex,\n      defaultProps,\n    );\n    const tpl = this.columnService.columns[columnProps.itemIndex]?.cellTemplate;\n    // if custom render\n    if (tpl) {\n      return (\n        <Host {...props}>\n          {tpl(h, { ...model, providers: this.providers }, this.additionalData)}\n        </Host>\n      );\n    }\n    // something is wrong with data\n    if (!model.column) {\n      console.error('Investigate column problem');\n      return;\n    }\n\n    const els: (VNode | string)[] = [];\n    if (model.column.rowDrag && isRowDragService(model.column.rowDrag, model)) {\n      els.push(\n        <span\n          class={DRAGGABLE_CLASS}\n          onMouseDown={originalEvent =>\n            this.dragStartCell.emit({\n              originalEvent,\n              model,\n            })\n          }\n        >\n          <span class={DRAG_ICON_CLASS} />\n        </span>,\n      );\n    }\n    els.push(`${ColumnService.getData(model.model[model.prop])}`);\n    // if regular render\n    return <Host {...props}>{els}</Host>;\n  }\n}\n\nfunction isRowDragService(\n  rowDrag: RevoGrid.RowDrag,\n  model: RevoGrid.ColumnDataSchemaModel,\n): boolean {\n  if (typeof rowDrag === 'function') {\n    return rowDrag(model);\n  }\n  return !!rowDrag;\n}\n","import { h } from '@stencil/core';\nimport RowRenderer, { RowProps } from '../../components/data/rowRenderer';\nimport { RevoGrid } from '../../interfaces';\nimport { GROUP_DEPTH, GROUP_EXPANDED, GROUP_EXPAND_BTN, GROUP_EXPAND_EVENT, PSEUDO_GROUP_ITEM } from './grouping.const';\nimport { GroupLabelTemplateFunc } from './grouping.row.types';\n\ninterface GroupRowPros extends RowProps {\n  model: RevoGrid.DataType;\n  hasExpand: boolean;\n  groupingCustomRenderer?: GroupLabelTemplateFunc;\n}\ntype Props = GroupRowPros & RevoGrid.PositionItem;\n\nfunction expandEvent(e: MouseEvent, model: RevoGrid.DataType, virtualIndex: number) {\n  const event = new CustomEvent(GROUP_EXPAND_EVENT, {\n    detail: {\n      model,\n      virtualIndex,\n    },\n    cancelable: true,\n    bubbles: true,\n  });\n  e.target.dispatchEvent(event);\n}\n\nconst GroupingRowRenderer = (props: Props) => {\n  const { model, itemIndex, hasExpand, groupingCustomRenderer } = props;\n  const name: string = model[PSEUDO_GROUP_ITEM];\n  const expanded: boolean = model[GROUP_EXPANDED];\n  const depth = parseInt(model[GROUP_DEPTH], 10) || 0;\n  if (!hasExpand) {\n    return <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth} />;\n  }\n\n  if (groupingCustomRenderer) {\n    return (\n      <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n        <div onClick={e => expandEvent(e, model, itemIndex)}>\n          {groupingCustomRenderer(h, { name, itemIndex, expanded, depth })}\n        </div>\n      </RowRenderer>\n    );\n  }\n\n  return (\n    <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n      <button class={{ [GROUP_EXPAND_BTN]: true }} onClick={e => expandEvent(e, model, itemIndex)}>\n        <svg aria-hidden=\"true\" style={{ transform: `rotate(${!expanded ? -90 : 0}deg)` }} focusable=\"false\" viewBox=\"0 0 448 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\n          ></path>\n        </svg>\n      </button>\n      {name}\n    </RowRenderer>\n  );\n};\nexport default GroupingRowRenderer;\n","revogr-data {\n  display: block;\n  width: 100%;\n  position: relative;\n\n  .rgRow {\n    position: absolute;\n    width: 100%;\n    left: 0;\n\n    &.groupingRow {\n      font-weight: 600;\n\n      .group-expand {\n        width: 25px;\n        height: 100%;\n        max-height: 25px;\n        margin-right: 2px;\n        background-color: transparent;\n        border-color: transparent;\n\n        svg {\n          width: 7px;\n        }\n      }\n    }\n  }\n\n  .revo-draggable {\n    $w: 24px;\n\n    border: none;\n    height: 32px;\n    display: inline-flex;\n    outline: 0;\n    padding: 0;\n    font-size: 0.8125rem;\n    box-sizing: border-box;\n    align-items: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    justify-content: center;\n    text-decoration: none;\n    width: $w;\n    height: 100%;\n    cursor: pointer;\n\n    > .revo-drag-icon {\n      vertical-align: middle;\n      display: inline-block;\n      pointer-events: none;\n      transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    }\n  }\n\n  .rgCell {\n    top: 0;\n    position: absolute;\n    box-sizing: border-box;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    &.align-center {\n      text-align: center;\n    }\n    &.align-left {\n      text-align: left;\n    }\n    &.align-right {\n      text-align: right;\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  Watch,\n  Element,\n  Event,\n  Prop,\n  VNode,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { HTMLStencilElement, State } from '@stencil/core/internal';\n\nimport ColumnService, { ColumnSource, RowSource } from './columnService';\nimport { ROW_FOCUSED_CLASS } from '../../utils/consts';\n\nimport { getSourceItem } from '../../store/dataSource/data.store';\nimport { Observable, RevoGrid, Selection } from '../../interfaces';\nimport RowRenderer from './rowRenderer';\nimport GroupingRowRenderer from '../../plugins/groupingRow/grouping.row.renderer';\nimport { isGrouping } from '../../plugins/groupingRow/grouping.service';\n\n/**\n * This component is responsible for rendering data\n * Rows, columns, groups and cells\n */\n@Component({\n  tag: 'revogr-data',\n  styleUrl: 'revogr-data-style.scss',\n})\nexport class RevogrData {\n  private columnService: ColumnService;\n\n  @Element() element!: HTMLStencilElement;\n\n  /**\n   * If readonly mode enables\n   */\n  @Prop() readonly: boolean;\n  /**\n   * Range selection mode\n   */\n  @Prop() range: boolean;\n\n  /**\n   * Defines property from which to read row class\n   */\n  @Prop() rowClass: string;\n  /**\n   * Additional data to pass to renderer\n   * Used in plugins such as vue or react to pass root app entity to cells\n   */\n  @Prop() additionalData: any;\n  @Prop() rowSelectionStore!: Observable<Selection.SelectionStoreState>;\n  @Prop() viewportRow!: Observable<RevoGrid.ViewportState>;\n  @Prop() viewportCol!: Observable<RevoGrid.ViewportState>;\n\n  @Prop() dimensionRow!: Observable<RevoGrid.DimensionSettingsState>;\n\n  /** Static stores, not expected to change during component lifetime */\n  @Prop() colData!: ColumnSource;\n  @Prop() dataStore!: RowSource;\n  @Prop() type!: RevoGrid.DimensionRows;\n\n  /**\n   * Before each row render\n   */\n  @Event() beforeRowRender: EventEmitter;\n  /**\n   * When data render finished for the designated type\n   */\n  @Event() afterrender: EventEmitter;\n\n  private renderedRows = new Map<number, VNode>();\n  private currentRange: Selection.RangeArea | null = null;\n\n  private rangeUnsubscribe: (() => void) | undefined;\n\n  @State() providers: RevoGrid.Providers;\n\n  @Watch('dataStore')\n  @Watch('colData')\n  onStoreChange() {\n    this.columnService?.destroy();\n    this.columnService = new ColumnService(this.dataStore, this.colData);\n    // make sure we have correct data, before render\n    this.providers = {\n      type: this.type,\n      data: this.dataStore,\n      viewport: this.viewportCol,\n      dimension: this.dimensionRow,\n      selection: this.rowSelectionStore,\n    };\n\n    this.rangeUnsubscribe?.();\n    this.rangeUnsubscribe = this.rowSelectionStore.onChange('range', e => {\n      // clear prev range\n      if (this.currentRange) {\n        this.renderedRows.forEach((row, y) => {\n          // skip current range\n          if (e && y >= e.y && y <= e.y1) {\n            return;\n          }\n          if (\n            row &&\n            row.$elm$ instanceof HTMLElement &&\n            row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n          ) {\n            row.$elm$.classList.remove(ROW_FOCUSED_CLASS);\n          }\n        });\n      }\n\n      // apply new range\n      if (e) {\n        for (let y = e.y; y <= e.y1; y++) {\n          const row = this.renderedRows.get(y);\n          if (\n            row &&\n            row.$elm$ instanceof HTMLElement &&\n            !row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n          ) {\n            row.$elm$.classList.add(ROW_FOCUSED_CLASS);\n          }\n        }\n      }\n      this.currentRange = e;\n    });\n  }\n\n  connectedCallback() {\n    this.onStoreChange();\n  }\n\n  disconnectedCallback() {\n    this.columnService?.destroy();\n    this.rangeUnsubscribe?.();\n  }\n\n  componentDidRender() {\n    this.afterrender.emit({ type: this.type });\n  }\n\n  render() {\n    this.renderedRows = new Map();\n    const rows = this.viewportRow.get('items');\n    const cols = this.viewportCol.get('items');\n    if (!this.columnService.columns.length || !rows.length || !cols.length) {\n      return '';\n    }\n    const rowsEls: VNode[] = [];\n\n    const depth = this.dataStore.get('groupingDepth');\n    const groupingCustomRenderer = this.dataStore.get('groupingCustomRenderer');\n    for (let rgRow of rows) {\n      const dataItem = getSourceItem(this.dataStore, rgRow.itemIndex);\n      /** grouping */\n      if (isGrouping(dataItem)) {\n        rowsEls.push(\n          <GroupingRowRenderer\n            {...rgRow}\n            index={rgRow.itemIndex}\n            model={dataItem}\n            groupingCustomRenderer={groupingCustomRenderer}\n            hasExpand={this.columnService.hasGrouping}\n          />,\n        );\n        continue;\n      }\n      /** grouping end */\n      const cells: (VNode | string | void)[] = [];\n      let rowClass = this.rowClass\n        ? this.columnService.getRowClass(rgRow.itemIndex, this.rowClass)\n        : '';\n\n      // highlight row if it is in range\n      if (\n        this.currentRange &&\n        rgRow.itemIndex >= this.currentRange.y &&\n        rgRow.itemIndex <= this.currentRange.y1\n      ) {\n        rowClass += ` ${ROW_FOCUSED_CLASS}`;\n      }\n      for (let rgCol of cols) {\n        cells.push(\n          <revogr-cell\n            additionalData={this.additionalData}\n            columnService={this.columnService}\n            providers={this.providers}\n            depth={this.columnService.hasGrouping ? depth : 0}\n            rowIndex={rgRow.itemIndex}\n            rowStart={rgRow.start}\n            rowEnd={rgRow.end}\n            rowSize={rgRow.size}\n            colIndex={rgCol.itemIndex}\n            colStart={rgCol.start}\n            colEnd={rgCol.end}\n            colSize={rgCol.size}\n          />,\n        );\n      }\n      const row = (\n        <RowRenderer\n          index={rgRow.itemIndex}\n          rowClass={rowClass}\n          size={rgRow.size}\n          start={rgRow.start}\n        >\n          {cells}\n        </RowRenderer>\n      );\n      this.beforeRowRender.emit({\n        node: row,\n        item: rgRow,\n        dataItem,\n      });\n      rowsEls.push(row);\n      this.renderedRows.set(rgRow.itemIndex, row);\n    }\n    return (\n      <Host>\n        <slot />\n        {rowsEls}\n      </Host>\n    );\n  }\n}\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","import { h } from '@stencil/core';\nimport { RevoGrid } from '../../interfaces';\n\nexport const FILTER_BUTTON_CLASS = 'rv-filter';\nexport const FILTER_BUTTON_ACTIVE = 'active';\n\ntype Props = {\n  column: RevoGrid.ColumnRegular;\n};\nexport const SortingSign = ({ column }: Props) => {\n  return <i class={column?.order ?? 'sort-off'} />;\n};\n","export type ResizeProps = {\n  active: ('r' | 'rb' | 'b' | 'lb' | 'l' | 'lt' | 't' | 'rt')[]; // all\n  fitParent: boolean; // false\n  minWidth: number; // 0\n  minHeight: number; // 0\n\n  disableAttributes: ('l' | 't' | 'w' | 'h')[]; // []\n  maxWidth?: number;\n  maxHeight?: number;\n\n  onResize?(e: ResizeEvent): void;\n  onDoubleClick?(originalEvent: MouseEvent): void;\n};\n\nexport type ResizeEvent = {\n  eventName: string;\n  changedX?: number;\n  changedY?: number;\n  width?: number;\n  height?: number;\n};\n\nexport enum ResizeEvents {\n  start = 'resize:start',\n  move = 'resize:move',\n  end = 'resize:end',\n}\n\nconst RESIZE_MASK: { [key: string]: any } = {\n  'resizable-r': { bit: 0b0001, cursor: 'ew-resize' },\n  'resizable-rb': { bit: 0b0011, cursor: 'se-resize' },\n  'resizable-b': { bit: 0b0010, cursor: 's-resize' },\n  'resizable-lb': { bit: 0b0110, cursor: 'sw-resize' },\n  'resizable-l': { bit: 0b0100, cursor: 'w-resize' },\n  'resizable-lt': { bit: 0b1100, cursor: 'nw-resize' },\n  'resizable-t': { bit: 0b1000, cursor: 'n-resize' },\n  'resizable-rt': { bit: 0b1001, cursor: 'ne-resize' },\n};\n\nconst DISABLE_MASK = {\n  l: 0b0001,\n  t: 0b0010,\n  w: 0b0100,\n  h: 0b1000,\n};\n\nconst defaultProps = (props: Partial<ResizeProps>): ResizeProps => {\n  return {\n    ...props,\n    fitParent: props.fitParent || false,\n    active: props.active || [],\n    disableAttributes: props.disableAttributes || [],\n    minWidth: props.minWidth || 0,\n    minHeight: props.minHeight || 0,\n  };\n};\n\nexport class ResizeDirective {\n  private $el: HTMLElement;\n  private props: ResizeProps;\n  private minW: number;\n  private minH: number;\n  private maxW: number;\n  private maxH: number;\n\n  private mouseX: number = 0;\n  private mouseY: number = 0;\n\n  private width: number = 0;\n  private height: number = 0;\n\n  private changeX: number = 0;\n  private changeY: number = 0;\n\n  private parent: { width: number; height: number };\n  private resizeState: number;\n  private activeResizer: HTMLElement | null;\n  private disableCalcMap: number = 0b1111;\n\n  private mouseMoveFunc: () => void;\n  private mouseUpFunc: () => void;\n\n  constructor(private initialProps: Partial<ResizeProps>, private $event?: (e: ResizeEvent) => void) {\n    this.props = defaultProps(initialProps);\n    this.mouseMoveFunc = this.handleMove.bind(this);\n    this.mouseUpFunc = this.handleUp.bind(this);\n\n    this.minW = this.props.minWidth;\n    this.minH = this.props.minHeight;\n    this.maxW = this.props.maxWidth;\n    this.maxH = this.props.maxHeight;\n    this.parent = { width: 0, height: 0 };\n    this.resizeState = 0;\n  }\n\n  set($el: HTMLElement) {\n    this.$el = $el;\n    this.props.disableAttributes.forEach(attr => {\n      switch (attr) {\n        case 'l':\n          this.disableCalcMap &= ~DISABLE_MASK.l;\n          break;\n        case 't':\n          this.disableCalcMap &= ~DISABLE_MASK.t;\n          break;\n        case 'w':\n          this.disableCalcMap &= ~DISABLE_MASK.w;\n          break;\n        case 'h':\n          this.disableCalcMap &= ~DISABLE_MASK.h;\n      }\n    });\n  }\n  emitEvent(eventName: string, additionalOptions?: any) {\n    if (!this.$event) {\n      return;\n    }\n    const isLeft = this.activeResizer?.classList.contains('resizable-l');\n    this.$event({\n      eventName,\n      width: this.width + this.changeX * (isLeft ? -1 : 1),\n      height: this.height + this.changeY,\n      changedX: this.changeX,\n      changedY: this.changeY,\n      ...additionalOptions,\n    });\n  }\n\n  private static isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n    const event = e as TouchEvent;\n    return event.touches?.length >= 0;\n  }\n\n  handleMove(event: MouseEvent | TouchEvent) {\n    if (!this.resizeState) {\n      return;\n    }\n    let eventY, eventX;\n    if (ResizeDirective.isTouchEvent(event)) {\n      eventY = event.touches[0].clientY;\n      eventX = event.touches[0].clientX;\n    } else {\n      eventY = event.clientY;\n      eventX = event.clientX;\n    }\n    let isX = this.resizeState & RESIZE_MASK['resizable-r'].bit || this.resizeState & RESIZE_MASK['resizable-l'].bit;\n\n    let isY = this.resizeState & RESIZE_MASK['resizable-t'].bit || this.resizeState & RESIZE_MASK['resizable-b'].bit;\n\n    if (isY && this.disableCalcMap & DISABLE_MASK.h) {\n      let diffY = eventY - this.mouseY;\n      let changedY = this.changeY + diffY;\n      const newHeight = this.height + changedY;\n      // if overcrossed min height\n      if (newHeight < this.minH) {\n        changedY = -(this.height - this.minH);\n      }\n      // if overcrossed max heiht\n      if (this.maxH && newHeight > this.maxH) {\n        changedY = this.maxH - this.height;\n      }\n\n      this.changeY = changedY;\n      this.mouseY = eventY;\n\n      if (this.activeResizer) {\n        this.activeResizer.style.bottom = `${-this.changeY}px`;\n      }\n    }\n    if (isX && this.disableCalcMap & DISABLE_MASK.w) {\n      const isLeft = this.activeResizer?.classList.contains('resizable-l');\n      let diffX = eventX - this.mouseX;\n      let changedX = this.changeX + diffX;\n      const newWidth = this.width + changedX * (isLeft ? -1 : 1);\n\n      // if overcrossed min width\n      if (newWidth < this.minW) {\n        changedX = -(this.width - this.minW);\n      }\n      // if overcrossed max width\n      if (this.maxW && newWidth > this.maxW) {\n        changedX = this.maxW - this.width;\n      }\n\n      this.changeX = changedX;\n      this.mouseX = eventX;\n\n      if (this.activeResizer) {\n        if (!isLeft) {\n          this.activeResizer.style.right = `${-this.changeX}px`;\n        } else {\n          this.activeResizer.style.left = `${this.changeX}px`;\n        }\n      }\n    }\n    this.emitEvent(ResizeEvents.move);\n  }\n\n  handleDown(event: MouseEvent | TouchEvent) {\n    if (event.defaultPrevented) {\n      return;\n    }\n    // stop other events if resize in progress\n    event.preventDefault();\n\n    this.dropInitial();\n    for (let elClass in RESIZE_MASK) {\n      const target = event.target as HTMLElement | null;\n      if (this.$el.contains(target) && target?.classList.contains(elClass)) {\n        document.body.style.cursor = RESIZE_MASK[elClass].cursor;\n        if (ResizeDirective.isTouchEvent(event)) {\n          this.setInitials(event.touches[0], target);\n        } else {\n          event.preventDefault && event.preventDefault();\n          this.setInitials(event, target);\n        }\n        this.resizeState = RESIZE_MASK[elClass].bit;\n        const eventName = ResizeEvents.start;\n        this.emitEvent(eventName);\n        break;\n      }\n    }\n    this.bindMove();\n  }\n\n  handleUp(e: MouseEvent) {\n    e.preventDefault();\n    if (this.resizeState !== 0) {\n      this.resizeState = 0;\n      document.body.style.cursor = '';\n      const eventName = ResizeEvents.end;\n      this.emitEvent(eventName);\n    }\n    this.dropInitial();\n    this.unbindMove();\n  }\n\n  private setInitials({ clientX, clientY }: { clientX: number; clientY: number }, target?: HTMLElement) {\n    const computedStyle = getComputedStyle(this.$el);\n    this.$el.classList.add('active');\n    this.activeResizer = target;\n\n    if (this.disableCalcMap & DISABLE_MASK.w) {\n      this.mouseX = clientX;\n      this.width = this.$el.clientWidth;\n      this.parent.width = this.$el.parentElement.clientWidth;\n\n      // min width\n      const minPaddingX = parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n      this.minW = Math.max(minPaddingX, this.initialProps.minWidth || 0);\n\n      // max width\n      if (this.initialProps.maxWidth) {\n        this.maxW = Math.max(this.width, this.initialProps.maxWidth);\n      }\n    }\n\n    if (this.disableCalcMap & DISABLE_MASK.h) {\n      this.mouseY = clientY;\n      this.height = this.$el.clientHeight;\n      this.parent.height = this.$el.parentElement.clientHeight;\n\n      // min height\n      const minPaddingY = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n      this.minH = Math.max(minPaddingY, this.initialProps.minHeight || 0);\n      // max height\n      if (this.initialProps.maxHeight) {\n        this.maxH = Math.max(this.height, this.initialProps.maxHeight);\n      }\n    }\n  }\n\n  private dropInitial() {\n    this.changeX = this.changeY = this.minW = this.minH;\n    this.width = this.height = 0;\n    if (this.activeResizer) {\n      this.activeResizer.removeAttribute('style');\n    }\n    this.$el.classList.remove('active');\n    this.activeResizer = null;\n  }\n\n  private bindMove() {\n    document.documentElement.addEventListener('mouseup', this.mouseUpFunc, true);\n    document.documentElement.addEventListener('touchend', this.mouseUpFunc, true);\n    document.documentElement.addEventListener('mousemove', this.mouseMoveFunc, true);\n    document.documentElement.addEventListener('touchmove', this.mouseMoveFunc, true);\n    document.documentElement.addEventListener('mouseleave', this.mouseUpFunc);\n  }\n\n  private unbindMove() {\n    document.documentElement.removeEventListener('mouseup', this.mouseUpFunc, true);\n    document.documentElement.removeEventListener('touchend', this.mouseUpFunc, true);\n    document.documentElement.removeEventListener('mousemove', this.mouseMoveFunc, true);\n    document.documentElement.removeEventListener('touchmove', this.mouseMoveFunc, true);\n    document.documentElement.removeEventListener('mouseleave', this.mouseUpFunc);\n  }\n}\n\n","import { h, VNode } from '@stencil/core';\nimport { RevoGrid } from '../interfaces';\nimport { ResizeProps, ResizeDirective, ResizeEvents } from './resizable.directive';\n\nexport const ResizableElement = (props: Partial<ResizeProps> & RevoGrid.CellProps, children: VNode[]) => {\n  const resizeEls: VNode[] = [];\n  const directive =\n    (props.canResize &&\n      new ResizeDirective(props, e => {\n        if (e.eventName === ResizeEvents.end) {\n          props.onResize && props.onResize(e);\n        }\n      })) ||\n    null;\n  if (props.canResize) {\n    if (props.active) {\n      for (let p in props.active) {\n        resizeEls.push(\n          <div\n            onClick={e => e.preventDefault()}\n            onDblClick={e => {\n              e.preventDefault();\n              props.onDoubleClick?.(e);\n            }}\n            onMouseDown={(e: MouseEvent) => directive?.handleDown(e)}\n            onTouchStart={(e: TouchEvent) => directive?.handleDown(e)}\n            class={`resizable resizable-${props.active[p]}`}\n          />,\n        );\n      }\n    }\n  } else {\n    if (props.active) {\n      for (let p in props.active) {\n        resizeEls.push(\n          <div\n            onClick={e => e.preventDefault()}\n            onTouchStart={(e: TouchEvent) => e.preventDefault()}\n            onDblClick={e => {\n              e.preventDefault();\n              props.onDoubleClick?.(e);\n            }}\n            class={`no-resize resizable resizable-${props.active[p]}`}\n          />,\n        );\n      }\n    }\n  }\n  return (\n    <div {...props} ref={(e: HTMLElement) => directive?.set(e)}>\n      {children}\n      {resizeEls}\n    </div>\n  );\n};\n","import { h, VNode } from '@stencil/core';\nimport { RevoGrid } from '../../interfaces';\nimport { dispatch } from '../../plugins/dispatcher';\nimport ColumnService from '../data/columnService';\nimport { ResizableElement } from '../../services/resizable.element';\nimport { ResizeProps } from '../../services/resizable.directive';\n\ntype Props = {\n  props: RevoGrid.CellProps & Partial<ResizeProps>;\n  additionalData: any;\n  data?: RevoGrid.ColumnTemplateProp;\n};\n\nconst ON_COLUMN_CLICK = 'column-click';\n\nexport const HeaderCellRenderer = ({ data, props, additionalData }: Props, children: VNode[]): VNode => {\n  let colTemplate: VNode | VNode[] | string = data?.name || '';\n  let cellProps = props;\n  if (data?.columnTemplate) {\n    colTemplate = data.columnTemplate(h, data, additionalData);\n  }\n  if (data?.columnProperties) {\n    const extra = data.columnProperties(data);\n    if (extra && typeof extra === 'object') {\n      cellProps = ColumnService.doMerge(props, extra);\n    }\n  }\n  return (\n    <ResizableElement {...cellProps} onMouseDown={(e: MouseEvent) => {\n      dispatch(e.currentTarget as HTMLElement, ON_COLUMN_CLICK, {\n        data,\n        event: e,\n      });\n     }}>\n      <div class=\"header-content\">{colTemplate}</div>\n      {children}\n    </ResizableElement>\n  );\n};\n","import { h, VNode } from '@stencil/core';\nimport { RevoGrid, Selection } from '../../interfaces';\nimport { FilterButton } from '../../plugins/filter/filter.button';\nimport { SortingSign } from '../../plugins/sorting/sorting.sign';\nimport { ResizeEvent, ResizeProps } from '../../services/resizable.directive';\nimport { DATA_COL, FOCUS_CLASS, HEADER_CLASS, HEADER_SORTABLE_CLASS, MIN_COL_SIZE } from '../../utils/consts';\nimport { HeaderCellRenderer } from './headerCellRenderer';\n\ntype Props = {\n  column: RevoGrid.VirtualPositionItem;\n  additionalData: any;\n  data?: RevoGrid.ColumnTemplateProp;\n  range?: Selection.RangeArea;\n  canResize?: boolean;\n  canFilter?: boolean;\n  onResize?(e: ResizeEvent): void;\n  onClick?(data: RevoGrid.InitialHeaderClick): void;\n  onDoubleClick?(data: RevoGrid.InitialHeaderClick): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst HeaderRenderer = (p: Props): VNode => {\n  const cellClass: { [key: string]: boolean } = {\n    [HEADER_CLASS]: true,\n    [HEADER_SORTABLE_CLASS]: !!p.data?.sortable,\n  };\n  if (p.data?.order) {\n    cellClass[p.data.order] = true;\n  }\n  const dataProps: RevoGrid.CellProps & Partial<ResizeProps> = {\n    [DATA_COL]: p.column.itemIndex,\n    canResize: p.canResize,\n    minWidth: p.data?.minSize || MIN_COL_SIZE,\n    maxWidth: p.data?.maxSize,\n    active: p.active || ['r'],\n    class: cellClass,\n    style: { width: `${p.column.size}px`, transform: `translateX(${p.column.start}px)` },\n    onResize: p.onResize,\n    onDoubleClick(originalEvent: MouseEvent) {\n      p.onDoubleClick({ column: p.data, index: p.column.itemIndex, originalEvent });\n    },\n    onClick(originalEvent: MouseEvent) {\n      if (originalEvent.defaultPrevented || !p.onClick) {\n        return;\n      }\n      p.onClick({ column: p.data, index: p.column.itemIndex, originalEvent });\n    },\n  };\n  if (p.range) {\n    if (p.column.itemIndex >= p.range.x && p.column.itemIndex <= p.range.x1) {\n      if (typeof dataProps.class === 'object') {\n        dataProps.class[FOCUS_CLASS] = true;\n      }\n    }\n  }\n  return (\n    <HeaderCellRenderer data={p.data} props={dataProps} additionalData={p.additionalData}>\n      {p.data?.order ? <SortingSign column={p.data} /> : ''}\n      {p.canFilter && p.data?.filter !== false ? <FilterButton column={p.data} /> : ''}\n    </HeaderCellRenderer>\n  );\n};\n\nexport default HeaderRenderer;\n","import { h, VNode } from '@stencil/core';\nimport { ResizeEvent, ResizeProps } from '../../services/resizable.directive';\nimport { Group } from '../../store/dataSource/data.store';\nimport { HEADER_CLASS, MIN_COL_SIZE } from '../../utils/consts';\nimport { HeaderCellRenderer } from '../../components/header/headerCellRenderer';\nimport { RevoGrid } from '../../interfaces';\n\ntype Props = {\n  start: number;\n  end: number;\n  group: Group;\n  providers: RevoGrid.Providers<RevoGrid.DimensionCols | 'rowHeaders'>;\n  additionalData: any;\n  canResize?: boolean;\n  onResize?(e: ResizeEvent): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst GroupHeaderRenderer = (p: Props): VNode[] => {\n  const groupProps: RevoGrid.CellProps & Partial<ResizeProps> = {\n    canResize: p.canResize,\n    minWidth: p.group.ids.length * MIN_COL_SIZE,\n    maxWidth: 0,\n\n    active: p.active || ['r'],\n    class: {\n      [HEADER_CLASS]: true,\n    },\n    style: {\n      transform: `translateX(${p.start}px)`,\n      width: `${p.end - p.start}px`,\n    },\n    onResize: p.onResize,\n  };\n  return (\n    <HeaderCellRenderer\n      data={{\n        ...p.group,\n        prop: '',\n        providers: p.providers,\n        index: p.start,\n      }}\n      props={groupProps}\n      additionalData={p.additionalData}\n    />\n  );\n};\n\nexport default GroupHeaderRenderer;\n","import { h, VNode } from '@stencil/core';\nimport findIndex from 'lodash/findIndex';\nimport { RevoGrid } from '../../interfaces';\nimport { Group } from '../../store/dataSource/data.store';\nimport { getItemByIndex } from '../../store/dimension/dimension.helpers';\nimport { HEADER_ROW_CLASS } from '../../utils/consts';\nimport GroupHeaderRenderer from './headerGroupRenderer';\nimport { ResizeProps } from '../..';\n\ntype Props<T> = {\n  visibleProps: { [prop: string]: number };\n  groups: Record<number, Group[]>;\n  dimensionCol: Pick<RevoGrid.DimensionSettingsState, 'indexes' | 'originItemSize' | 'indexToItem'>;\n  depth: number;\n  canResize: boolean;\n  providers: RevoGrid.Providers<T>;\n  additionalData: any;\n  onResize(changedX: number, startIndex: number, endIndex: number): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst ColumnGroupsRenderer = ({\n  additionalData, providers, depth, groups, visibleProps, dimensionCol, canResize, active, onResize\n}: Props<RevoGrid.DimensionCols | 'rowHeaders'>): VNode[] => {\n  // render group columns\n  const groupRow: VNode[] = [];\n  for (let i = 0; i < depth; i++) {\n    if (groups[i]) {\n      for (let group of groups[i]) {\n        // if group in visible range\n        // find first visible group prop in visible columns range\n        const indexFirstVisibleCol: number | undefined = findIndex(group.ids, id => typeof visibleProps[id] === 'number');\n        if (indexFirstVisibleCol > -1) {\n          const colVisibleIndex = visibleProps[group.ids[indexFirstVisibleCol]]; // get column index\n          const groupStartIndex = colVisibleIndex - indexFirstVisibleCol; // first column index in group\n          const groupEndIndex = groupStartIndex + group.ids.length - 1; // last column index in group\n\n          // coordinates\n          const groupStart = getItemByIndex(dimensionCol, groupStartIndex).start;\n          const groupEnd = getItemByIndex(dimensionCol, groupEndIndex).end;\n          groupRow.push(\n            <GroupHeaderRenderer\n              providers={providers}\n              start={groupStart}\n              end={groupEnd}\n              group={group}\n              active={active}\n              canResize={canResize}\n              onResize={e => onResize(e.changedX, groupStartIndex, groupEndIndex)}\n              additionalData={additionalData}\n            />,\n          );\n        }\n      }\n    }\n    groupRow.push(<div class={`${HEADER_ROW_CLASS} group`} />);\n  }\n  return groupRow;\n};\n\nexport default ColumnGroupsRenderer;\n","revogr-header {\n  position: relative;\n  z-index: 5;\n  display: block;\n  \n\n  .rgHeaderCell {\n    display: flex;\n\n    &.align-center {\n      text-align: center;\n    }\n    &.align-left {\n      text-align: left;\n    }\n    &.align-right {\n      text-align: right;\n    }\n    &.sortable {\n      cursor: pointer;\n    }\n\n    i {\n      &.asc,\n      &.desc {\n        &:after {\n          font-size: 13px;\n        }\n      }\n      &.asc {\n        &:after {\n          content: '↑';\n        }\n      }\n      &.desc {\n        &:after {\n          content: '↓';\n        }\n      }\n    }\n  }\n\n  .rgHeaderCell,\n  .grouped-cell {\n    position: absolute;\n    box-sizing: border-box;\n    height: 100%;\n    z-index: 1;\n  }\n\n  .header-rgRow {\n    display: block;\n    position: relative;\n\n    &.group {\n      z-index: 0;\n    }\n  }\n\n  .group-rgRow {\n    position: relative;\n  }\n\n  .rgHeaderCell {\n    &.active {\n      z-index: 10;\n\n      .resizable {\n        background-color: deepskyblue;\n      }\n    }\n    .header-content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      flex-grow: 1;\n    }\n    .resizable {\n      display: block;\n      position: absolute;\n      z-index: 90;\n      touch-action: none;\n      user-select: none;\n      &:hover {\n        background-color: deepskyblue;\n      }\n    }\n    $size: 6px;\n    > .resizable-r {\n      cursor: ew-resize;\n      width: $size;\n      right: 0;\n      top: 0;\n      height: 100%;\n    }\n    > .resizable-rb {\n      cursor: se-resize;\n      width: $size;\n      height: $size;\n      right: 0;\n      bottom: 0;\n    }\n\n    > .resizable-b {\n      cursor: s-resize;\n      height: $size;\n      bottom: 0;\n      width: 100%;\n      left: 0;\n    }\n\n    > .resizable-lb {\n      cursor: sw-resize;\n      width: $size;\n      height: $size;\n      left: 0;\n      bottom: 0;\n    }\n\n    > .resizable-l {\n      cursor: w-resize;\n      width: $size;\n      left: 0;\n      height: 100%;\n      top: 0;\n    }\n\n    > .resizable-lt {\n      cursor: nw-resize;\n      width: $size;\n      height: $size;\n      left: 0;\n      top: 0;\n    }\n\n    > .resizable-t {\n      cursor: n-resize;\n      height: $size;\n      top: 0;\n      width: 100%;\n      left: 0;\n    }\n\n    > .resizable-rt {\n      cursor: ne-resize;\n      width: $size;\n      height: $size;\n      right: 0;\n      top: 0;\n    }\n  }\n  .rv-filter {\n    visibility: hidden;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { HTMLStencilElement, VNode } from '@stencil/core/internal';\nimport keyBy from 'lodash/keyBy';\n\nimport { HEADER_ACTUAL_ROW_CLASS, HEADER_ROW_CLASS } from '../../utils/consts';\nimport { Observable, RevoGrid, Selection } from '../../interfaces';\nimport { Groups } from '../../store/dataSource/data.store';\nimport HeaderRenderer from './headerRenderer';\nimport ColumnGroupsRenderer from '../../plugins/groupingColumn/columnGroupsRenderer';\nimport { ResizeProps } from '../../services/resizable.directive';\n\n@Component({\n  tag: 'revogr-header',\n  styleUrl: 'revogr-header-style.scss',\n})\nexport class RevogrHeaderComponent {\n  @Element() element!: HTMLStencilElement;\n  @Prop() viewportCol: Observable<RevoGrid.ViewportState>;\n  @Prop() dimensionCol: Observable<RevoGrid.DimensionSettingsState>;\n  @Prop() selectionStore: Observable<Selection.SelectionStoreState>;\n\n  @Prop() parent: string = '';\n  @Prop() groups: Groups;\n  @Prop() groupingDepth: number = 0;\n\n  /**\n   * If columns can be resized\n   */\n  @Prop() canResize: boolean;\n  /**\n   * Define custom resize position\n   */\n  @Prop() resizeHandler: ResizeProps['active'];\n  @Prop() colData: RevoGrid.ColumnRegular[];\n  @Prop() columnFilter: boolean;\n\n  /**\n   * Column type\n   */\n  @Prop() type!:  RevoGrid.DimensionCols | 'rowHeaders';\n\n  /**\n   * Extra properties to pass into header renderer, such as vue or react components to handle parent\n   */\n  @Prop() additionalData: any = {};\n\n  @Event() initialHeaderClick: EventEmitter<RevoGrid.InitialHeaderClick>;\n  @Event() headerresize: EventEmitter<RevoGrid.ViewSettingSizeProp>;\n  @Event({ eventName: 'before-resize', cancelable: true }) beforeResize: EventEmitter<RevoGrid.ColumnRegular[]>;\n  @Event() headerdblClick: EventEmitter<RevoGrid.InitialHeaderClick>;\n\n  private onResize({ width }: { width?: number }, index: number): void {\n    const col = this.colData[index];\n    const event = this.beforeResize.emit([{\n      ...col,\n      size: width || undefined\n    }]);\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.headerresize.emit({ [index]: width || 0 });\n  }\n\n  private onResizeGroup(changedX: number, startIndex: number, endIndex: number): void {\n    const sizes: RevoGrid.ViewSettingSizeProp = {};\n    const cols = keyBy(this.viewportCol.get('items'), 'itemIndex');\n    const change = changedX / (endIndex - startIndex + 1);\n    for (let i = startIndex; i <= endIndex; i++) {\n      const item = cols[i];\n      if (item) {\n        sizes[i] = item.size + change;\n      }\n    }\n    this.headerresize.emit(sizes);\n  }\n\n  render() {\n    const cols = this.viewportCol.get('items');\n    const range = this.selectionStore?.get('range');\n    const cells: VNode[] = [];\n    const visibleProps: { [prop: string]: number } = {};\n\n    // render header columns\n    for (let rgCol of cols) {\n      const colData = this.colData[rgCol.itemIndex];\n      cells.push(\n        <HeaderRenderer\n          range={range}\n          column={rgCol}\n          data={{\n            ...colData,\n            index: rgCol.itemIndex,\n            providers: this.providers,\n          }}\n          canFilter={!!this.columnFilter}\n          canResize={this.canResize}\n          active={this.resizeHandler}\n          onResize={e => this.onResize(e, rgCol.itemIndex)}\n          onDoubleClick={e => this.headerdblClick.emit(e)}\n          onClick={e => this.initialHeaderClick.emit(e)}\n          additionalData={this.additionalData}\n        />,\n      );\n      visibleProps[colData?.prop] = rgCol.itemIndex;\n    }\n\n    return [\n      <div class=\"group-rgRow\">\n        <ColumnGroupsRenderer\n          canResize={this.canResize}\n          active={this.resizeHandler}\n          visibleProps={visibleProps}\n          providers={this.providers}\n          groups={this.groups}\n          dimensionCol={this.dimensionCol.state}\n          depth={this.groupingDepth}\n          onResize={(changedX, startIndex, endIndex) => this.onResizeGroup(changedX, startIndex, endIndex)}\n          additionalData={this.additionalData}\n        />\n      </div>,\n      <div class={`${HEADER_ROW_CLASS} ${HEADER_ACTUAL_ROW_CLASS}`}>{cells}</div>,\n    ];\n  }\n\n  get providers(): RevoGrid.Providers<RevoGrid.DimensionCols | 'rowHeaders'> {\n    return {\n      type: this.type,\n      data: this.colData,\n      viewport: this.viewportCol,\n      dimension: this.dimensionCol,\n      selection: this.selectionStore,\n    };\n  }\n}\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","export async function resizeObserver() {\n  if (!('ResizeObserver' in window)) {\n    const module = await import('@juggle/resize-observer');\n    (window as Window & typeof globalThis).ResizeObserver = (module.ResizeObserver as unknown) as typeof ResizeObserver;\n  }\n}\n","import throttle from 'lodash/throttle';\nimport { resizeObserver } from '../../utils/resizeObserver';\ninterface Events {\n  resize(entries: ReadonlyArray<ResizeObserverEntry>, observer: ResizeObserver): void;\n}\nexport default class GridResizeService {\n  private resizeObserver: ResizeObserver | null = null;\n  private resize = throttle((e: ReadonlyArray<ResizeObserverEntry>, o: ResizeObserver) => this.events?.resize(e, o), 10);\n  constructor(el: HTMLElement, private events: Events) {\n    this.init(el);\n  }\n\n  async init(el: HTMLElement): Promise<void> {\n    await resizeObserver();\n    this.resizeObserver = new ResizeObserver(this.resize);\n    this.resizeObserver?.observe(el);\n  }\n\n  public destroy(): void {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n  }\n}\n","@mixin noScroll {\n  /* Hide scrollbar for IE and Edge */\n  -ms-overflow-style: none;\n  scrollbar-width: none; /* Firefox */\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n    -webkit-appearance: none;\n  }\n}\n\n.rowHeaders {\n  z-index: 2;\n  font-size: 10px;\n  display: flex;\n  height: 100%;\n\n  revogr-data .rgCell {\n    text-align: center;\n  }\n\n  .rgCell {\n    padding: 0 1em !important;\n    min-width: 100%;\n  }\n}\n\nrevogr-viewport-scroll {\n  @include noScroll;\n\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n\n  &.colPinStart,\n  &.colPinEnd {\n    z-index: 2;\n  }\n\n  // make sure it would work\n  &.colPinEnd:has(.active) {\n    overflow: visible;\n  }\n\n  &.rgCol {\n    flex-grow: 1;\n  }\n\n  .content-wrapper {\n    overflow: hidden;\n  }\n\n  .inner-content-table {\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    width: 100%;\n    min-width: 100%;\n    position: relative;\n    z-index: 0;\n  }\n\n  .vertical-inner {\n    overflow-y: auto;\n    position: relative;\n    width: 100%;\n    flex-grow: 1;\n    @include noScroll;\n\n    revogr-data,\n    revogr-overlay-selection {\n      height: 100%;\n    }\n  }\n}\n","import {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Element,\n  Prop,\n  Host,\n  Listen,\n} from '@stencil/core';\nimport each from 'lodash/each';\n\nimport GridResizeService from '../revoGrid/viewport.resize.service';\nimport LocalScrollService from '../../services/localScrollService';\nimport { RevoGrid, ScrollCoordinateEvent } from '../../interfaces';\nimport {\n  CONTENT_SLOT,\n  FOOTER_SLOT,\n  HEADER_SLOT,\n} from '../revoGrid/viewport.helpers';\ntype Delta = 'deltaX' | 'deltaY';\ntype LocalScrollEvent = {\n  preventDefault(): void;\n} & { [x in Delta]: number };\n@Component({\n  tag: 'revogr-viewport-scroll',\n  styleUrl: 'revogr-viewport-scroll-style.scss',\n})\nexport class RevogrViewportScroll {\n  @Prop() readonly rowHeader: boolean;\n  @Event({ bubbles: true }) scrollViewport: EventEmitter<RevoGrid.ViewPortScrollEvent>;\n  @Event() resizeViewport: EventEmitter<RevoGrid.ViewPortResizeEvent>;\n  @Event() scrollchange: EventEmitter<{\n    type: RevoGrid.DimensionType;\n    hasScroll: boolean;\n  }>;\n\n  /**\n   * Silently scroll to coordinate\n   * Made to align negative coordinates for mobile devices\n  */\n  @Event()\n  silentScroll: EventEmitter<RevoGrid.ViewPortScrollEvent>;\n\n  private scrollThrottling = 10;\n\n  /**\n   * Width of inner content\n   */\n  @Prop() contentWidth = 0;\n  /**\n   * Height of inner content\n   */\n  @Prop() contentHeight = 0;\n\n  private oldValY = this.contentHeight;\n  private oldValX = this.contentWidth;\n\n  @Element() horizontalScroll: HTMLElement;\n  private verticalScroll: HTMLElement;\n  private header: HTMLElement;\n  private footer: HTMLElement;\n\n  /**\n   * Static functions to bind wheel change\n   */\n  private horizontalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n  private verticalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n\n  private resizeService: GridResizeService;\n  private scrollService: LocalScrollService;\n\n  /**\n   * Last mw event time for trigger scroll function below\n   * If mousewheel function was ignored we still need to trigger render\n   */\n  private mouseWheelScrollTimestamp: Record<RevoGrid.DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n  private lastKnownScrollCoordinate: Record<RevoGrid.DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n  @Method() async setScroll(e: RevoGrid.ViewPortScrollEvent) {\n    this.latestScrollUpdate(e.dimension);\n    this.scrollService?.setScroll(e);\n  }\n\n  /**\n   * update on delta in case we don't know existing position or external change\n   * @param e\n   */\n  @Method() async changeScroll(\n    e: RevoGrid.ViewPortScrollEvent,\n    silent = false,\n  ) {\n    if (silent) {\n      if (e.coordinate) {\n        switch (e.dimension) {\n          // for mobile devices to skip negative scroll loop. only on vertical scroll\n          case 'rgRow':\n            this.verticalScroll.style.transform = `translateY(${-1 * e.coordinate}px)`;\n            break;\n        }\n      }\n      return null;\n    }\n    if (e.delta) {\n      switch (e.dimension) {\n        case 'rgCol':\n          e.coordinate = this.horizontalScroll.scrollLeft + e.delta;\n          break;\n        case 'rgRow':\n          e.coordinate = this.verticalScroll.scrollTop + e.delta;\n          break;\n      }\n      this.setScroll(e);\n    }\n    return e;\n  }\n\n  /**\n   * Dispatch this event to trigger vertical mouse wheel from plugins\n   */\n  @Listen('mousewheel-vertical') mousewheelVertical({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.verticalMouseWheel(e);\n  }\n  /**\n   * Dispatch this event to trigger horizontal mouse wheel from plugins\n   */\n  @Listen('mousewheel-horizontal') mousewheelHorizontal({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.horizontalMouseWheel(e);\n  }\n  /**\n   * Allows to use outside listener\n   */\n  @Listen('scroll-coordinate') scrollApply({\n    detail: { type, coordinate },\n  }: CustomEvent<ScrollCoordinateEvent>) {\n    this.applyOnScroll(type, coordinate, true);\n  }\n\n  connectedCallback() {\n    /**\n     * Bind scroll functions for farther usage\n     */\n    if ('ontouchstart' in document.documentElement) {\n      this.scrollThrottling = 0;\n    }\n    // allow mousewheel for all devices including mobile\n    this.verticalMouseWheel = this.onVerticalMouseWheel.bind(\n      this,\n      'rgRow',\n      'deltaY',\n    );\n    this.horizontalMouseWheel = this.onHorizontalMouseWheel.bind(\n      this,\n      'rgCol',\n      'deltaX',\n    );\n    /**\n     * Create local scroll service\n     */\n    this.scrollService = new LocalScrollService({\n      // to improve safari smoothnes on scroll\n      // skipAnimationFrame: isSafariDesktop(),\n      beforeScroll: e => this.scrollViewport.emit(e),\n      afterScroll: e => {\n        this.lastKnownScrollCoordinate[e.dimension] = e.coordinate;\n        switch (e.dimension) {\n          case 'rgCol':\n            this.horizontalScroll.scrollLeft = e.coordinate;\n            break;\n          case 'rgRow':\n            // this will trigger on scroll event\n            this.verticalScroll.scrollTop = e.coordinate;\n            // for mobile devices to skip negative scroll loop. only on vertical scroll\n            if (this.verticalScroll.style.transform) {\n              this.verticalScroll.style.transform = '';\n            }\n            break;\n        }\n      },\n    });\n  }\n\n  componentDidLoad() {\n    // track horizontal viewport resize\n    this.resizeService = new GridResizeService(this.horizontalScroll, {\n      resize: entries => {\n        let height = entries[0]?.contentRect.height || 0;\n        if (height) {\n          height -= this.header.clientHeight + this.footer.clientHeight;\n        }\n        const els = {\n          rgRow: {\n            size: height,\n            contentSize: this.contentHeight,\n            scroll: this.verticalScroll.scrollTop,\n          },\n          rgCol: {\n            size: entries[0]?.contentRect.width || 0,\n            contentSize: this.contentWidth,\n            scroll: this.horizontalScroll.scrollLeft,\n          },\n        };\n        each(els, (item, dimension: RevoGrid.DimensionType) => {\n          this.resizeViewport.emit({ dimension, size: item.size, rowHeader: this.rowHeader });\n          this.scrollService?.scroll(item.scroll, dimension, true);\n          // track scroll visibility on outer element change\n          this.setScrollVisibility(dimension, item.size, item.contentSize);\n        });\n      },\n    });\n  }\n\n  /**\n   * Check if scroll present or not per type\n   * Trigger this method on inner content size change or on outer element size change\n   * If inner content bigger then outer size then scroll is present and mousewheel binding required\n   * @param type - dimension type 'rgRow/y' or 'rgCol/x'\n   * @param size - outer content size\n   * @param innerContentSize - inner content size\n   */\n  setScrollVisibility(\n    type: RevoGrid.DimensionType,\n    size: number,\n    innerContentSize: number,\n  ) {\n    // test if scroll present\n    const hasScroll = size < innerContentSize;\n    let el: HTMLElement;\n    // event reference for binding\n    switch (type) {\n      case 'rgCol':\n        el = this.horizontalScroll;\n        break;\n      case 'rgRow':\n        el = this.verticalScroll;\n        break;\n    }\n    // based on scroll visibility assign or remove class and event\n    if (hasScroll) {\n      el.classList.add(`scroll-${type}`);\n    } else {\n      el.classList.remove(`scroll-${type}`);\n    }\n    this.scrollchange.emit({ type, hasScroll });\n  }\n\n  disconnectedCallback() {\n    this.resizeService.destroy();\n  }\n\n  async componentDidRender() {\n    // scroll update if number of rows changed\n    if (this.contentHeight < this.oldValY && this.verticalScroll) {\n      this.verticalScroll.scrollTop += this.contentHeight - this.oldValY;\n    }\n    this.oldValY = this.contentHeight;\n\n    // scroll update if number of cols changed\n    if (this.contentWidth < this.oldValX) {\n      this.horizontalScroll.scrollLeft += this.contentWidth - this.oldValX;\n    }\n    this.oldValX = this.contentWidth;\n\n    this.scrollService.setParams(\n      {\n        contentSize: this.contentHeight,\n        clientSize: this.verticalScroll.clientHeight,\n        virtualSize: 0,\n      },\n      'rgRow',\n    );\n\n    this.scrollService.setParams(\n      {\n        contentSize: this.contentWidth,\n        clientSize: this.horizontalScroll.clientWidth,\n        virtualSize: 0,\n      },\n      'rgCol',\n    );\n    this.setScrollVisibility(\n      'rgRow',\n      this.verticalScroll.clientHeight,\n      this.contentHeight,\n    );\n    this.setScrollVisibility(\n      'rgCol',\n      this.horizontalScroll.clientWidth,\n      this.contentWidth,\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        onWheel={this.horizontalMouseWheel}\n        onScroll={(e: UIEvent) => this.onScroll('rgCol', e)}\n      >\n        <div\n          class=\"inner-content-table\"\n          style={{ width: `${this.contentWidth}px` }}\n        >\n          <div class=\"header-wrapper\" ref={e => (this.header = e)}>\n            <slot name={HEADER_SLOT} />\n          </div>\n          <div\n            class=\"vertical-inner\"\n            ref={el => (this.verticalScroll = el)}\n            onWheel={this.verticalMouseWheel}\n            onScroll={(e: MouseEvent) => this.onScroll('rgRow', e)}\n          >\n            <div\n              class=\"content-wrapper\"\n              style={{ height: `${this.contentHeight}px` }}\n            >\n              <slot name={CONTENT_SLOT} />\n            </div>\n          </div>\n          <div class=\"footer-wrapper\" ref={e => (this.footer = e)}>\n            <slot name={FOOTER_SLOT} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n  /**\n   * Extra layer for scroll event monitoring, where MouseWheel event is not passing\n   * We need to trigger scroll event in case there is no mousewheel event\n   */\n  private onScroll(type: RevoGrid.DimensionType, e: UIEvent) {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    const target = e.target;\n    let scroll = 0;\n    switch (type) {\n      case 'rgCol':\n        scroll = target?.scrollLeft;\n        break;\n      case 'rgRow':\n        scroll = target?.scrollTop;\n        break;\n    }\n\n    // for mobile devices to skip negative scroll loop\n    if (scroll < 0) {\n      this.silentScroll.emit({ dimension: type, coordinate: scroll });\n      return;\n    }\n    this.applyOnScroll(type, scroll);\n  }\n\n  /**\n   * Applies scroll on scroll event only if mousewheel event was some time ago\n   */\n  private applyOnScroll(\n    type: RevoGrid.DimensionType,\n    coordinate: number,\n    outside = false,\n  ) {\n    const change = new Date().getTime() - this.mouseWheelScrollTimestamp[type];\n    // apply after throttling\n    if (change > this.scrollThrottling && coordinate !== this.lastKnownScrollCoordinate[type]) {\n      this.scrollService?.scroll(\n        coordinate,\n        type,\n        undefined,\n        undefined,\n        outside,\n      );\n    }\n  }\n\n  /** remember last mw event time */\n  private latestScrollUpdate(dimension: RevoGrid.DimensionType) {\n    this.mouseWheelScrollTimestamp[dimension] = new Date().getTime();\n  }\n\n  /**\n   * On vertical mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onVerticalMouseWheel(\n    type: RevoGrid.DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    e.preventDefault && e.preventDefault();\n    const pos = this.verticalScroll.scrollTop + e[delta];\n    this.scrollService?.scroll(pos, type, undefined, e[delta]);\n    this.latestScrollUpdate(type);\n  }\n\n  /**\n   * On horizontal mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onHorizontalMouseWheel(\n    type: RevoGrid.DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    e.preventDefault && e.preventDefault();\n    const pos = this.horizontalScroll.scrollLeft + e[delta];\n    this.scrollService?.scroll(pos, type, undefined, e[delta]);\n    this.latestScrollUpdate(type);\n  }\n}\n"],"mappings":"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"}
{"file":"revogr-viewport-scroll2.js","mappings":"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","names":["isObject","debounce","throttle"],"sources":["src/components/revoGrid/viewport.helpers.ts","node_modules/lodash/throttle.js","src/utils/resizeObserver.ts","src/components/revoGrid/viewport.resize.service.ts","src/components/scroll/revogr-viewport-scroll-style.scss?tag=revogr-viewport-scroll","src/components/scroll/revogr-viewport-scroll.tsx"],"sourcesContent":["/** Collect data for pinned columns in required @ViewportProps format */\nimport { RevoGrid, Selection } from '../../interfaces';\nimport { ViewportColumn } from './viewport.interfaces';\n\nexport const HEADER_SLOT = 'header';\nexport const FOOTER_SLOT = 'footer';\nexport const CONTENT_SLOT = 'content';\nexport const DATA_SLOT = 'data';\n\n/** Receive last visible in viewport by required type */\nexport function getLastCell(data: ViewportColumn, rowType: RevoGrid.MultiDimensionType): Selection.Cell {\n  return {\n    x: data.viewports[data.colType].store.get('realCount'),\n    y: data.viewports[rowType].store.get('realCount'),\n  };\n}\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","export async function resizeObserver() {\n  if (!('ResizeObserver' in window)) {\n    const module = await import('@juggle/resize-observer');\n    (window as Window & typeof globalThis).ResizeObserver = (module.ResizeObserver as unknown) as typeof ResizeObserver;\n  }\n}\n","import throttle from 'lodash/throttle';\nimport { resizeObserver } from '../../utils/resizeObserver';\ninterface Events {\n  resize(entries: ReadonlyArray<ResizeObserverEntry>, observer: ResizeObserver): void;\n}\nexport default class GridResizeService {\n  private resizeObserver: ResizeObserver | null = null;\n  private resize = throttle((e: ReadonlyArray<ResizeObserverEntry>, o: ResizeObserver) => this.events?.resize(e, o), 10);\n  constructor(el: HTMLElement, private events: Events) {\n    this.init(el);\n  }\n\n  async init(el: HTMLElement): Promise<void> {\n    await resizeObserver();\n    this.resizeObserver = new ResizeObserver(this.resize);\n    this.resizeObserver?.observe(el);\n  }\n\n  public destroy(): void {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n  }\n}\n","@mixin noScroll {\n  /* Hide scrollbar for IE and Edge */\n  -ms-overflow-style: none;\n  scrollbar-width: none; /* Firefox */\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n    -webkit-appearance: none;\n  }\n}\n\n.rowHeaders {\n  z-index: 2;\n  font-size: 10px;\n  display: flex;\n  height: 100%;\n\n  revogr-data .rgCell {\n    text-align: center;\n  }\n\n  .rgCell {\n    padding: 0 1em !important;\n    min-width: 100%;\n  }\n}\n\nrevogr-viewport-scroll {\n  @include noScroll;\n\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n\n  &.colPinStart,\n  &.colPinEnd {\n    z-index: 2;\n  }\n\n  // make sure it would work\n  &.colPinEnd:has(.active) {\n    overflow: visible;\n  }\n\n  &.rgCol {\n    flex-grow: 1;\n  }\n\n  .content-wrapper {\n    overflow: hidden;\n  }\n\n  .inner-content-table {\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    width: 100%;\n    min-width: 100%;\n    position: relative;\n    z-index: 0;\n  }\n\n  .vertical-inner {\n    overflow-y: auto;\n    position: relative;\n    width: 100%;\n    flex-grow: 1;\n    @include noScroll;\n\n    revogr-data,\n    revogr-overlay-selection {\n      height: 100%;\n    }\n  }\n}\n","import {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Element,\n  Prop,\n  Host,\n  Listen,\n} from '@stencil/core';\nimport each from 'lodash/each';\n\nimport GridResizeService from '../revoGrid/viewport.resize.service';\nimport LocalScrollService from '../../services/localScrollService';\nimport { RevoGrid, ScrollCoordinateEvent } from '../../interfaces';\nimport {\n  CONTENT_SLOT,\n  FOOTER_SLOT,\n  HEADER_SLOT,\n} from '../revoGrid/viewport.helpers';\ntype Delta = 'deltaX' | 'deltaY';\ntype LocalScrollEvent = {\n  preventDefault(): void;\n} & { [x in Delta]: number };\n@Component({\n  tag: 'revogr-viewport-scroll',\n  styleUrl: 'revogr-viewport-scroll-style.scss',\n})\nexport class RevogrViewportScroll {\n  @Prop() readonly rowHeader: boolean;\n  @Event({ bubbles: true }) scrollViewport: EventEmitter<RevoGrid.ViewPortScrollEvent>;\n  @Event() resizeViewport: EventEmitter<RevoGrid.ViewPortResizeEvent>;\n  @Event() scrollchange: EventEmitter<{\n    type: RevoGrid.DimensionType;\n    hasScroll: boolean;\n  }>;\n\n  /**\n   * Silently scroll to coordinate\n   * Made to align negative coordinates for mobile devices\n  */\n  @Event()\n  silentScroll: EventEmitter<RevoGrid.ViewPortScrollEvent>;\n\n  private scrollThrottling = 10;\n\n  /**\n   * Width of inner content\n   */\n  @Prop() contentWidth = 0;\n  /**\n   * Height of inner content\n   */\n  @Prop() contentHeight = 0;\n\n  private oldValY = this.contentHeight;\n  private oldValX = this.contentWidth;\n\n  @Element() horizontalScroll: HTMLElement;\n  private verticalScroll: HTMLElement;\n  private header: HTMLElement;\n  private footer: HTMLElement;\n\n  /**\n   * Static functions to bind wheel change\n   */\n  private horizontalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n  private verticalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n\n  private resizeService: GridResizeService;\n  private scrollService: LocalScrollService;\n\n  /**\n   * Last mw event time for trigger scroll function below\n   * If mousewheel function was ignored we still need to trigger render\n   */\n  private mouseWheelScrollTimestamp: Record<RevoGrid.DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n  private lastKnownScrollCoordinate: Record<RevoGrid.DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n  @Method() async setScroll(e: RevoGrid.ViewPortScrollEvent) {\n    this.latestScrollUpdate(e.dimension);\n    this.scrollService?.setScroll(e);\n  }\n\n  /**\n   * update on delta in case we don't know existing position or external change\n   * @param e\n   */\n  @Method() async changeScroll(\n    e: RevoGrid.ViewPortScrollEvent,\n    silent = false,\n  ) {\n    if (silent) {\n      if (e.coordinate) {\n        switch (e.dimension) {\n          // for mobile devices to skip negative scroll loop. only on vertical scroll\n          case 'rgRow':\n            this.verticalScroll.style.transform = `translateY(${-1 * e.coordinate}px)`;\n            break;\n        }\n      }\n      return null;\n    }\n    if (e.delta) {\n      switch (e.dimension) {\n        case 'rgCol':\n          e.coordinate = this.horizontalScroll.scrollLeft + e.delta;\n          break;\n        case 'rgRow':\n          e.coordinate = this.verticalScroll.scrollTop + e.delta;\n          break;\n      }\n      this.setScroll(e);\n    }\n    return e;\n  }\n\n  /**\n   * Dispatch this event to trigger vertical mouse wheel from plugins\n   */\n  @Listen('mousewheel-vertical') mousewheelVertical({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.verticalMouseWheel(e);\n  }\n  /**\n   * Dispatch this event to trigger horizontal mouse wheel from plugins\n   */\n  @Listen('mousewheel-horizontal') mousewheelHorizontal({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.horizontalMouseWheel(e);\n  }\n  /**\n   * Allows to use outside listener\n   */\n  @Listen('scroll-coordinate') scrollApply({\n    detail: { type, coordinate },\n  }: CustomEvent<ScrollCoordinateEvent>) {\n    this.applyOnScroll(type, coordinate, true);\n  }\n\n  connectedCallback() {\n    /**\n     * Bind scroll functions for farther usage\n     */\n    if ('ontouchstart' in document.documentElement) {\n      this.scrollThrottling = 0;\n    }\n    // allow mousewheel for all devices including mobile\n    this.verticalMouseWheel = this.onVerticalMouseWheel.bind(\n      this,\n      'rgRow',\n      'deltaY',\n    );\n    this.horizontalMouseWheel = this.onHorizontalMouseWheel.bind(\n      this,\n      'rgCol',\n      'deltaX',\n    );\n    /**\n     * Create local scroll service\n     */\n    this.scrollService = new LocalScrollService({\n      // to improve safari smoothnes on scroll\n      // skipAnimationFrame: isSafariDesktop(),\n      beforeScroll: e => this.scrollViewport.emit(e),\n      afterScroll: e => {\n        this.lastKnownScrollCoordinate[e.dimension] = e.coordinate;\n        switch (e.dimension) {\n          case 'rgCol':\n            this.horizontalScroll.scrollLeft = e.coordinate;\n            break;\n          case 'rgRow':\n            // this will trigger on scroll event\n            this.verticalScroll.scrollTop = e.coordinate;\n            // for mobile devices to skip negative scroll loop. only on vertical scroll\n            if (this.verticalScroll.style.transform) {\n              this.verticalScroll.style.transform = '';\n            }\n            break;\n        }\n      },\n    });\n  }\n\n  componentDidLoad() {\n    // track horizontal viewport resize\n    this.resizeService = new GridResizeService(this.horizontalScroll, {\n      resize: entries => {\n        let height = entries[0]?.contentRect.height || 0;\n        if (height) {\n          height -= this.header.clientHeight + this.footer.clientHeight;\n        }\n        const els = {\n          rgRow: {\n            size: height,\n            contentSize: this.contentHeight,\n            scroll: this.verticalScroll.scrollTop,\n          },\n          rgCol: {\n            size: entries[0]?.contentRect.width || 0,\n            contentSize: this.contentWidth,\n            scroll: this.horizontalScroll.scrollLeft,\n          },\n        };\n        each(els, (item, dimension: RevoGrid.DimensionType) => {\n          this.resizeViewport.emit({ dimension, size: item.size, rowHeader: this.rowHeader });\n          this.scrollService?.scroll(item.scroll, dimension, true);\n          // track scroll visibility on outer element change\n          this.setScrollVisibility(dimension, item.size, item.contentSize);\n        });\n      },\n    });\n  }\n\n  /**\n   * Check if scroll present or not per type\n   * Trigger this method on inner content size change or on outer element size change\n   * If inner content bigger then outer size then scroll is present and mousewheel binding required\n   * @param type - dimension type 'rgRow/y' or 'rgCol/x'\n   * @param size - outer content size\n   * @param innerContentSize - inner content size\n   */\n  setScrollVisibility(\n    type: RevoGrid.DimensionType,\n    size: number,\n    innerContentSize: number,\n  ) {\n    // test if scroll present\n    const hasScroll = size < innerContentSize;\n    let el: HTMLElement;\n    // event reference for binding\n    switch (type) {\n      case 'rgCol':\n        el = this.horizontalScroll;\n        break;\n      case 'rgRow':\n        el = this.verticalScroll;\n        break;\n    }\n    // based on scroll visibility assign or remove class and event\n    if (hasScroll) {\n      el.classList.add(`scroll-${type}`);\n    } else {\n      el.classList.remove(`scroll-${type}`);\n    }\n    this.scrollchange.emit({ type, hasScroll });\n  }\n\n  disconnectedCallback() {\n    this.resizeService.destroy();\n  }\n\n  async componentDidRender() {\n    // scroll update if number of rows changed\n    if (this.contentHeight < this.oldValY && this.verticalScroll) {\n      this.verticalScroll.scrollTop += this.contentHeight - this.oldValY;\n    }\n    this.oldValY = this.contentHeight;\n\n    // scroll update if number of cols changed\n    if (this.contentWidth < this.oldValX) {\n      this.horizontalScroll.scrollLeft += this.contentWidth - this.oldValX;\n    }\n    this.oldValX = this.contentWidth;\n\n    this.scrollService.setParams(\n      {\n        contentSize: this.contentHeight,\n        clientSize: this.verticalScroll.clientHeight,\n        virtualSize: 0,\n      },\n      'rgRow',\n    );\n\n    this.scrollService.setParams(\n      {\n        contentSize: this.contentWidth,\n        clientSize: this.horizontalScroll.clientWidth,\n        virtualSize: 0,\n      },\n      'rgCol',\n    );\n    this.setScrollVisibility(\n      'rgRow',\n      this.verticalScroll.clientHeight,\n      this.contentHeight,\n    );\n    this.setScrollVisibility(\n      'rgCol',\n      this.horizontalScroll.clientWidth,\n      this.contentWidth,\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        onWheel={this.horizontalMouseWheel}\n        onScroll={(e: UIEvent) => this.onScroll('rgCol', e)}\n      >\n        <div\n          class=\"inner-content-table\"\n          style={{ width: `${this.contentWidth}px` }}\n        >\n          <div class=\"header-wrapper\" ref={e => (this.header = e)}>\n            <slot name={HEADER_SLOT} />\n          </div>\n          <div\n            class=\"vertical-inner\"\n            ref={el => (this.verticalScroll = el)}\n            onWheel={this.verticalMouseWheel}\n            onScroll={(e: MouseEvent) => this.onScroll('rgRow', e)}\n          >\n            <div\n              class=\"content-wrapper\"\n              style={{ height: `${this.contentHeight}px` }}\n            >\n              <slot name={CONTENT_SLOT} />\n            </div>\n          </div>\n          <div class=\"footer-wrapper\" ref={e => (this.footer = e)}>\n            <slot name={FOOTER_SLOT} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n  /**\n   * Extra layer for scroll event monitoring, where MouseWheel event is not passing\n   * We need to trigger scroll event in case there is no mousewheel event\n   */\n  private onScroll(type: RevoGrid.DimensionType, e: UIEvent) {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    const target = e.target;\n    let scroll = 0;\n    switch (type) {\n      case 'rgCol':\n        scroll = target?.scrollLeft;\n        break;\n      case 'rgRow':\n        scroll = target?.scrollTop;\n        break;\n    }\n\n    // for mobile devices to skip negative scroll loop\n    if (scroll < 0) {\n      this.silentScroll.emit({ dimension: type, coordinate: scroll });\n      return;\n    }\n    this.applyOnScroll(type, scroll);\n  }\n\n  /**\n   * Applies scroll on scroll event only if mousewheel event was some time ago\n   */\n  private applyOnScroll(\n    type: RevoGrid.DimensionType,\n    coordinate: number,\n    outside = false,\n  ) {\n    const change = new Date().getTime() - this.mouseWheelScrollTimestamp[type];\n    // apply after throttling\n    if (change > this.scrollThrottling && coordinate !== this.lastKnownScrollCoordinate[type]) {\n      this.scrollService?.scroll(\n        coordinate,\n        type,\n        undefined,\n        undefined,\n        outside,\n      );\n    }\n  }\n\n  /** remember last mw event time */\n  private latestScrollUpdate(dimension: RevoGrid.DimensionType) {\n    this.mouseWheelScrollTimestamp[dimension] = new Date().getTime();\n  }\n\n  /**\n   * On vertical mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onVerticalMouseWheel(\n    type: RevoGrid.DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    e.preventDefault && e.preventDefault();\n    const pos = this.verticalScroll.scrollTop + e[delta];\n    this.scrollService?.scroll(pos, type, undefined, e[delta]);\n    this.latestScrollUpdate(type);\n  }\n\n  /**\n   * On horizontal mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onHorizontalMouseWheel(\n    type: RevoGrid.DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    e.preventDefault && e.preventDefault();\n    const pos = this.horizontalScroll.scrollLeft + e[delta];\n    this.scrollService?.scroll(pos, type, undefined, e[delta]);\n    this.latestScrollUpdate(type);\n  }\n}\n"],"version":3}
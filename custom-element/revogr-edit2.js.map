{"file":"revogr-edit2.js","mappings":"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","names":[],"sources":["src/utils/keyCodes.ts","src/utils/platform.ts","src/utils/keyCodes.utils.ts","src/components/overlay/editors/text.tsx","src/components/overlay/revogr-edit-style.scss?tag=revogr-edit","src/components/overlay/revogr-edit.tsx"],"sourcesContent":["enum codes {\n  MOUSE_LEFT = 1,\n  MOUSE_RIGHT = 3,\n  MOUSE_MIDDLE = 2,\n  BACKSPACE = 8,\n  COMMA = 188,\n  INSERT = 45,\n  DELETE = 46,\n  END = 35,\n  ENTER = 13,\n  ESCAPE = 27,\n  CONTROL = 17,\n  COMMAND_LEFT = 91,\n  COMMAND_RIGHT = 93,\n  COMMAND_FIREFOX = 224,\n  ALT = 18,\n  HOME = 36,\n  PAGE_DOWN = 34,\n  PAGE_UP = 33,\n  PERIOD = 190,\n  SPACE = 32,\n  SHIFT = 16,\n  CAPS_LOCK = 20,\n  TAB = 9,\n  ARROW_RIGHT = 39,\n  ARROW_LEFT = 37,\n  ARROW_UP = 38,\n  ARROW_DOWN = 40,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  A = 65,\n  C = 67,\n  D = 68,\n  F = 70,\n  L = 76,\n  O = 79,\n  P = 80,\n  S = 83,\n  V = 86,\n  X = 88,\n}\n\nenum codesLetter {\n  ENTER = 'Enter',\n  ENTER_NUM = 'NumpadEnter',\n  A = 'KeyA',\n  C = 'KeyC',\n  X = 'KeyX',\n  V = 'KeyV',\n  ESCAPE = 'Escape',\n  TAB = 'Tab',\n  BACKSPACE = 'Backspace',\n  DELETE = 'Delete',\n  ARROW_RIGHT = 'ArrowRight',\n  ARROW_LEFT = 'ArrowLeft',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n  SHIFT = 'Shift',\n}\n\nexport default codes;\nexport { codesLetter };\n","enum osPlatform {\n  mac = 'Mac',\n}\nexport default osPlatform;\n","import KeyCodesEnum, { codesLetter } from './keyCodes';\nimport OsPlatform from './platform';\nimport includes from 'lodash/includes';\n\nexport function isLetterKey(code: number): boolean {\n  return (\n    code === 32 || // space\n    (code >= 48 && code <= 57) ||\n    (code >= 96 && code <= 111) ||\n    (code >= 186 && code <= 192) ||\n    (code >= 219 && code <= 222) ||\n    code >= 226 ||\n    (code >= 65 && code <= 90)\n  ); // a-z\n}\n\nexport function isMetaKey(code: number): boolean {\n  const keys: KeyCodesEnum[] = [\n    KeyCodesEnum.ARROW_DOWN,\n    KeyCodesEnum.ARROW_UP,\n    KeyCodesEnum.ARROW_LEFT,\n    KeyCodesEnum.ARROW_RIGHT,\n    KeyCodesEnum.HOME,\n    KeyCodesEnum.END,\n    KeyCodesEnum.DELETE,\n    KeyCodesEnum.BACKSPACE,\n    KeyCodesEnum.F1,\n    KeyCodesEnum.F2,\n    KeyCodesEnum.F3,\n    KeyCodesEnum.F4,\n    KeyCodesEnum.F5,\n    KeyCodesEnum.F6,\n    KeyCodesEnum.F7,\n    KeyCodesEnum.F8,\n    KeyCodesEnum.F9,\n    KeyCodesEnum.F10,\n    KeyCodesEnum.F11,\n    KeyCodesEnum.F12,\n    KeyCodesEnum.TAB,\n    KeyCodesEnum.PAGE_DOWN,\n    KeyCodesEnum.PAGE_UP,\n    KeyCodesEnum.ENTER,\n    KeyCodesEnum.ESCAPE,\n    KeyCodesEnum.SHIFT,\n    KeyCodesEnum.CAPS_LOCK,\n    KeyCodesEnum.ALT,\n  ];\n\n  return keys.indexOf(code) !== -1;\n}\n\n// navigator.platform\nexport function isCtrlKey(code: number, platform: string): boolean {\n  if (platform.includes(OsPlatform.mac)) {\n    return includes([KeyCodesEnum.COMMAND_LEFT, KeyCodesEnum.COMMAND_RIGHT, KeyCodesEnum.COMMAND_FIREFOX], code);\n  }\n\n  return KeyCodesEnum.CONTROL === code;\n}\n\nexport function isCtrlMetaKey(code: KeyCodesEnum): boolean {\n  return includes([KeyCodesEnum.CONTROL, KeyCodesEnum.COMMAND_LEFT, KeyCodesEnum.COMMAND_RIGHT, KeyCodesEnum.COMMAND_FIREFOX], code);\n}\n\nexport function isClear(code: string): boolean {\n  return codesLetter.BACKSPACE === code || codesLetter.DELETE === code;\n}\n\nexport function isTab(code: string): boolean {\n  return codesLetter.TAB === code;\n}\n\nexport function isEnterKey(code: string): boolean {\n  return code === codesLetter.ENTER || code === codesLetter.ENTER_NUM;\n}\n\nexport function isCut(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'x') || // Ctrl + X on Windows\n  (event.metaKey && event.key === 'x');   // Cmd + X on Mac\n}\nexport function isCopy(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'c') || // Ctrl + C on Windows\n    (event.metaKey && event.key === 'c');   // Cmd + C on Mac\n}\nexport function isPaste(event: KeyboardEvent): boolean {\n  return (event.ctrlKey && event.key === 'v') || // Ctrl + V on Windows\n  (event.metaKey && event.key === 'v');   // Cmd + V on Mac\n}\nexport function isAll(event: KeyboardEvent): boolean {\n  return  (event.ctrlKey && event.key === 'a') || // Ctrl + A on Windows\n  (event.metaKey && event.key === 'a');   // Cmd + A on Mac\n}\n","import { h } from '@stencil/core';\nimport { isEnterKey, isTab } from '../../../utils/keyCodes.utils';\nimport { Edition, RevoGrid } from '../../../interfaces';\nimport { timeout } from '../../../utils';\n\n/**\n * Callback triggered on cell editor save\n * Closes editor when called\n * @param preventFocus - if true editor will not be closed and next cell will not be focused\n */\nexport type SaveCallback = (value: Edition.SaveData, preventFocus: boolean) => void;\n\nexport class TextEditor implements Edition.EditorBase {\n  private editInput!: HTMLInputElement;\n\n  public element: Element | null = null;\n  public editCell: Edition.EditCell | null = null;\n\n  constructor(public column: RevoGrid.ColumnRegular, private saveCallback?: SaveCallback) {}\n\n  async componentDidRender(): Promise<void> {\n    if (this.editInput) {\n      await timeout();\n      this.editInput?.focus();\n    }\n  }\n\n  private onKeyDown(e: KeyboardEvent): void {\n    const isEnter = isEnterKey(e.code);\n    const isKeyTab = isTab(e.code);\n\n    if ((isKeyTab || isEnter) && e.target && this.saveCallback && !e.isComposing) {\n      // blur is needed to avoid autoscroll\n      this.editInput.blur();\n      // request callback which will close cell after all\n      this.saveCallback(this.getValue(), isKeyTab);\n    }\n  }\n  \n  getValue() {\n    return this.editInput?.value;\n  }\n\n  // required\n  render() {\n    return (\n      <input\n        type=\"text\"\n        value={this.editCell?.val || ''}\n        ref={el => {\n          this.editInput = el;\n        }}\n        onKeyDown={e => this.onKeyDown(e)}\n      />\n    );\n  }\n}\n","revogr-edit {\n  display: block;\n  position: absolute;\n  background-color: #fff;\n\n  input {\n    height: 100%;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  revo-dropdown {\n    height: 100%;\n\n    &.shrink {\n      fieldset legend > span {\n        display: none;\n      }\n    }\n  }\n}\n","import { Component, Event, EventEmitter, Prop, h, Element, Host, Method } from '@stencil/core';\n\nimport { Edition, RevoGrid } from '../../interfaces';\nimport { EDIT_INPUT_WR } from '../../utils/consts';\nimport { TextEditor } from './editors/text';\n\n/**\n * Cell editor component\n */\n@Component({\n  tag: 'revogr-edit',\n  styleUrl: 'revogr-edit-style.scss',\n})\nexport class RevoEdit {\n  @Element() element: HTMLElement;\n  @Prop() editCell: Edition.EditCell;\n\n  @Prop() column: RevoGrid.ColumnRegular | null;\n  /** Custom editors register */\n  @Prop() editor: Edition.EditorCtr | null;\n\n  /** Save on editor close */\n  @Prop() saveOnClose: boolean = false;\n  /** Additional data to pass to renderer */\n  @Prop() additionalData: any;\n\n  /** Cell edit event */\n  @Event() cellEdit: EventEmitter<Edition.SaveDataDetails>;\n\n  /**\n   * Close editor event\n   * pass true if requires focus next\n   */\n  @Event() closeEdit: EventEmitter<boolean | undefined>;\n\n  /** Edit session editor */\n  private currentEditor: Edition.EditorBase | null = null;\n  private saveRunning = false;\n\n  @Method() async cancel() {\n    this.saveRunning = true;\n  }\n\n  onAutoSave() {\n    this.saveRunning = true;\n    const val = this.currentEditor.getValue && this.currentEditor.getValue();\n    // for editor plugin internal usage in case you want to stop save and use your own\n    if (this.currentEditor.beforeAutoSave) {\n      const canSave = this.currentEditor.beforeAutoSave(val);\n      if (canSave === false) {\n        return;\n      }\n    }\n    this.onSave(val, true);\n  }\n\n  /**\n   * Callback triggered on cell editor save\n   * Closes editor when called\n   * @param preventFocus - if true editor will not be closed and next cell will not be focused\n   */\n  onSave(val: Edition.SaveData, preventFocus?: boolean): void {\n    this.saveRunning = true;\n    if (this.editCell) {\n      this.cellEdit.emit({\n        rgCol: this.editCell.x,\n        rgRow: this.editCell.y,\n        type: this.editCell.type,\n        prop: this.editCell.prop,\n        val,\n        preventFocus,\n      });\n    }\n  }\n\n  componentWillRender(): void {\n    // we have active editor\n    if (this.currentEditor) {\n      return;\n    }\n    this.saveRunning = false;\n    \n    // custom editor usage\n    // use TextEditor (editors/text.tsx) to create custom editor\n    if (this.editor) {\n      this.currentEditor = new this.editor(\n        this.column,\n        // save\n        (e, preventFocus) => {\n          this.onSave(e, preventFocus);\n        },\n        // cancel\n        focusNext => {\n          this.saveRunning = true;\n          this.closeEdit.emit(focusNext);\n        },\n      );\n      return;\n    }\n    // default text editor usage\n    this.currentEditor = new TextEditor(this.column, (e, preventFocus) => this.onSave(e, preventFocus));\n  }\n\n  componentDidRender(): void {\n    if (!this.currentEditor) {\n      return;\n    }\n    this.currentEditor.element = this.element.firstElementChild;\n    this.currentEditor.componentDidRender?.();\n  }\n\n  disconnectedCallback(): void {\n    if (this.saveOnClose) {\n      // shouldn't be cancelled by saveRunning\n      // editor requires getValue to be able to save\n      if (!this.saveRunning) {\n        this.onAutoSave();\n      }\n    }\n\n    this.saveRunning = false;\n    if (!this.currentEditor) {\n      return;\n    }\n\n    this.currentEditor.disconnectedCallback && this.currentEditor.disconnectedCallback();\n    if (this.currentEditor.element) {\n      this.currentEditor.element = null;\n    }\n    this.currentEditor = null;\n  }\n\n  render() {\n    if (this.currentEditor) {\n      this.currentEditor.editCell = this.editCell;\n      return <Host class={EDIT_INPUT_WR}>{this.currentEditor.render(h, this.additionalData)}</Host>;\n    }\n    return '';\n  }\n}\n"],"version":3}